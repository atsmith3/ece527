

================================================================
== Vivado HLS Report for 'max_pooling2'
================================================================
* Date:           Wed Nov  7 23:47:52 2018

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        lenet
* Solution:       lenet_accelerator
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.34|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                         |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name        | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1                 |    ?|    ?|         ?|          -|          -|     6|    no    |
        | + Loop 1.1              |    ?|    ?|         ?|          -|          -|    14|    no    |
        |  ++ Loop 1.1.1          |    ?|    ?|         ?|          -|          -|    14|    no    |
        |   +++ Loop 1.1.1.1      |    ?|    ?|         ?|          -|          -|     ?|    no    |
        |    ++++ Loop 1.1.1.1.1  |    ?|    ?|         4|          -|          -|     ?|    no    |
        +-------------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 9
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
3 --> 
	4  / (!exitcond1)
	2  / (exitcond1)
4 --> 
	5  / (!exitcond)
	3  / (exitcond)
5 --> 
	6  / (tmp_2)
	4  / (!tmp_2)
6 --> 
	7  / (tmp_3)
	5  / (!tmp_3)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	6  / true
* FSM state operations: 

 <State 1>: 1.59ns
ST_1: StgValue_10 (3)  [1/1] 1.59ns  loc: lenet/lenet_hls.c:163
:0  br label %.loopexit


 <State 2>: 2.32ns
ST_2: c (5)  [1/1] 0.00ns
.loopexit:0  %c = phi i3 [ 0, %0 ], [ %c_2, %.loopexit.loopexit ]

ST_2: tmp_24 (6)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:163
.loopexit:1  %tmp_24 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %c, i4 0)

ST_2: p_shl2_cast (7)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:163
.loopexit:2  %p_shl2_cast = zext i7 %tmp_24 to i8

ST_2: tmp_25 (8)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:163
.loopexit:3  %tmp_25 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %c, i1 false)

ST_2: p_shl3_cast (9)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:172
.loopexit:4  %p_shl3_cast = zext i4 %tmp_25 to i8

ST_2: tmp_26 (10)  [1/1] 2.32ns  loc: lenet/lenet_hls.c:172
.loopexit:5  %tmp_26 = sub i8 %p_shl2_cast, %p_shl3_cast

ST_2: tmp_28_cast (11)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:172
.loopexit:6  %tmp_28_cast = sext i8 %tmp_26 to i9

ST_2: tmp_27 (12)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:163
.loopexit:7  %tmp_27 = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %c, i5 0)

ST_2: p_shl_cast (13)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:163
.loopexit:8  %p_shl_cast = zext i8 %tmp_27 to i9

ST_2: tmp_28 (14)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:163
.loopexit:9  %tmp_28 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %c, i2 0)

ST_2: p_shl1_cast (15)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
.loopexit:10  %p_shl1_cast = zext i5 %tmp_28 to i9

ST_2: tmp_29 (16)  [1/1] 2.32ns  loc: lenet/lenet_hls.c:169
.loopexit:11  %tmp_29 = sub i9 %p_shl_cast, %p_shl1_cast

ST_2: tmp_31_cast (17)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
.loopexit:12  %tmp_31_cast = sext i9 %tmp_29 to i32

ST_2: exitcond2 (18)  [1/1] 2.07ns  loc: lenet/lenet_hls.c:163
.loopexit:13  %exitcond2 = icmp eq i3 %c, -2

ST_2: empty (19)  [1/1] 0.00ns
.loopexit:14  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)

ST_2: c_2 (20)  [1/1] 2.26ns  loc: lenet/lenet_hls.c:163
.loopexit:15  %c_2 = add i3 %c, 1

ST_2: StgValue_27 (21)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:163
.loopexit:16  br i1 %exitcond2, label %5, label %.preheader3.preheader

ST_2: StgValue_28 (23)  [1/1] 1.59ns  loc: lenet/lenet_hls.c:172
.preheader3.preheader:0  br label %.preheader3

ST_2: StgValue_29 (112)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:176
:0  ret void


 <State 3>: 4.65ns
ST_3: h (25)  [1/1] 0.00ns
.preheader3:0  %h = phi i4 [ %h_2, %.preheader3.loopexit ], [ 0, %.preheader3.preheader ]

ST_3: h_cast2_cast (26)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:172
.preheader3:1  %h_cast2_cast = zext i4 %h to i9

ST_3: tmp_30 (27)  [1/1] 2.32ns  loc: lenet/lenet_hls.c:172
.preheader3:2  %tmp_30 = add i9 %tmp_28_cast, %h_cast2_cast

ST_3: tmp_31 (28)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:172
.preheader3:3  %tmp_31 = trunc i9 %tmp_30 to i8

ST_3: p_shl4_cast (29)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:172
.preheader3:4  %p_shl4_cast = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_31, i4 0)

ST_3: tmp_32 (30)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:172
.preheader3:5  %tmp_32 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %tmp_30, i1 false)

ST_3: p_shl5_cast (31)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:172
.preheader3:6  %p_shl5_cast = sext i10 %tmp_32 to i12

ST_3: tmp_33 (32)  [1/1] 2.33ns  loc: lenet/lenet_hls.c:172
.preheader3:7  %tmp_33 = sub i12 %p_shl4_cast, %p_shl5_cast

ST_3: exitcond1 (33)  [1/1] 3.10ns  loc: lenet/lenet_hls.c:164
.preheader3:8  %exitcond1 = icmp eq i4 %h, -2

ST_3: empty_7 (34)  [1/1] 0.00ns
.preheader3:9  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 14, i64 14, i64 14)

ST_3: h_2 (35)  [1/1] 2.35ns  loc: lenet/lenet_hls.c:164
.preheader3:10  %h_2 = add i4 1, %h

ST_3: StgValue_41 (36)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:164
.preheader3:11  br i1 %exitcond1, label %.loopexit.loopexit, label %.preheader.preheader

ST_3: i (38)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:167
.preheader.preheader:0  %i = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %h, i1 false)

ST_3: i_cast (39)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:167
.preheader.preheader:1  %i_cast = zext i5 %i to i32

ST_3: tmp_s (40)  [1/1] 2.33ns  loc: lenet/lenet_hls.c:167
.preheader.preheader:2  %tmp_s = add i5 %i, 2

ST_3: tmp_cast (41)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:167
.preheader.preheader:3  %tmp_cast = zext i5 %tmp_s to i32

ST_3: StgValue_46 (42)  [1/1] 1.59ns  loc: lenet/lenet_hls.c:165
.preheader.preheader:4  br label %.preheader

ST_3: StgValue_47 (110)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 4>: 3.10ns
ST_4: w (44)  [1/1] 0.00ns
.preheader:0  %w = phi i4 [ %w_2, %4 ], [ 0, %.preheader.preheader ]

ST_4: w_cast1_cast (45)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:172
.preheader:1  %w_cast1_cast = zext i4 %w to i12

ST_4: tmp_34 (46)  [1/1] 2.33ns  loc: lenet/lenet_hls.c:172
.preheader:2  %tmp_34 = add i12 %tmp_33, %w_cast1_cast

ST_4: tmp_36_cast (47)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:172
.preheader:3  %tmp_36_cast = zext i12 %tmp_34 to i32

ST_4: output_addr (48)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:172
.preheader:4  %output_addr = getelementptr [1176 x float]* %output_r, i32 0, i32 %tmp_36_cast

ST_4: exitcond (49)  [1/1] 3.10ns  loc: lenet/lenet_hls.c:165
.preheader:5  %exitcond = icmp eq i4 %w, -2

ST_4: empty_8 (50)  [1/1] 0.00ns
.preheader:6  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 14, i64 14, i64 14)

ST_4: w_2 (51)  [1/1] 2.35ns  loc: lenet/lenet_hls.c:165
.preheader:7  %w_2 = add i4 %w, 1

ST_4: StgValue_56 (52)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:165
.preheader:8  br i1 %exitcond, label %.preheader3.loopexit, label %1

ST_4: j (54)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:168
:0  %j = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %w, i1 false)

ST_4: j_cast (55)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:168
:1  %j_cast = zext i5 %j to i32

ST_4: tmp (56)  [1/1] 2.33ns  loc: lenet/lenet_hls.c:168
:2  %tmp = add i5 %j, 2

ST_4: tmp_cast_9 (57)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:168
:3  %tmp_cast_9 = zext i5 %tmp to i32

ST_4: StgValue_61 (58)  [1/1] 1.59ns  loc: lenet/lenet_hls.c:167
:4  br label %2

ST_4: StgValue_62 (108)  [1/1] 0.00ns
.preheader3.loopexit:0  br label %.preheader3


 <State 5>: 5.24ns
ST_5: i8 (60)  [1/1] 0.00ns
:0  %i8 = phi i32 [ %i_cast, %1 ], [ %i_2, %3 ]

ST_5: max_value (61)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
:1  %max_value = phi float [ 0xC26D1A94A0000000, %1 ], [ %max_value_1, %3 ]

ST_5: tmp_35 (62)  [1/1] 2.90ns  loc: lenet/lenet_hls.c:169
:2  %tmp_35 = add i32 %tmp_31_cast, %i8

ST_5: tmp_36 (63)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
:3  %tmp_36 = trunc i32 %tmp_35 to i9

ST_5: p_shl6_cast (64)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
:4  %p_shl6_cast = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %tmp_36, i5 0)

ST_5: tmp_37 (65)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
:5  %tmp_37 = trunc i32 %tmp_35 to i12

ST_5: p_shl7_cast (66)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
:6  %p_shl7_cast = call i14 @_ssdm_op_BitConcatenate.i14.i12.i2(i12 %tmp_37, i2 0)

ST_5: tmp_38 (67)  [1/1] 2.34ns  loc: lenet/lenet_hls.c:169
:7  %tmp_38 = sub i14 %p_shl6_cast, %p_shl7_cast

ST_5: tmp_2 (68)  [1/1] 3.26ns  loc: lenet/lenet_hls.c:167
:8  %tmp_2 = icmp slt i32 %i8, %tmp_cast

ST_5: StgValue_72 (69)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:167
:9  br i1 %tmp_2, label %.preheader4.preheader, label %4

ST_5: StgValue_73 (71)  [1/1] 1.59ns  loc: lenet/lenet_hls.c:169
.preheader4.preheader:0  br label %.preheader4

ST_5: StgValue_74 (105)  [1/1] 3.25ns  loc: lenet/lenet_hls.c:172
:0  store float %max_value, float* %output_addr, align 4

ST_5: StgValue_75 (106)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:165
:1  br label %.preheader


 <State 6>: 5.60ns
ST_6: j7 (73)  [1/1] 0.00ns
.preheader4:0  %j7 = phi i32 [ %j_2, %._crit_edge ], [ %j_cast, %.preheader4.preheader ]

ST_6: max_value_1 (74)  [1/1] 0.00ns
.preheader4:1  %max_value_1 = phi float [ %max_value_3, %._crit_edge ], [ %max_value, %.preheader4.preheader ]

ST_6: tmp_39 (75)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
.preheader4:2  %tmp_39 = trunc i32 %j7 to i14

ST_6: tmp_40 (76)  [1/1] 2.34ns  loc: lenet/lenet_hls.c:169
.preheader4:3  %tmp_40 = add i14 %tmp_39, %tmp_38

ST_6: tmp_41_cast (77)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
.preheader4:4  %tmp_41_cast = zext i14 %tmp_40 to i32

ST_6: c1_o_2_addr (78)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
.preheader4:5  %c1_o_2_addr = getelementptr [4704 x float]* @c1_o_2, i32 0, i32 %tmp_41_cast

ST_6: tmp_3 (79)  [1/1] 3.26ns  loc: lenet/lenet_hls.c:168
.preheader4:6  %tmp_3 = icmp slt i32 %j7, %tmp_cast_9

ST_6: StgValue_83 (80)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:168
.preheader4:7  br i1 %tmp_3, label %._crit_edge, label %3

ST_6: c1_o_2_load (82)  [2/2] 3.25ns  loc: lenet/lenet_hls.c:169
._crit_edge:0  %c1_o_2_load = load float* %c1_o_2_addr, align 4

ST_6: j_2 (99)  [1/1] 2.90ns  loc: lenet/lenet_hls.c:168
._crit_edge:17  %j_2 = add nsw i32 1, %j7

ST_6: i_2 (102)  [1/1] 2.90ns  loc: lenet/lenet_hls.c:167
:0  %i_2 = add nsw i32 %i8, 1

ST_6: StgValue_87 (103)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:167
:1  br label %2


 <State 7>: 3.25ns
ST_7: c1_o_2_load (82)  [1/2] 3.25ns  loc: lenet/lenet_hls.c:169
._crit_edge:0  %c1_o_2_load = load float* %c1_o_2_addr, align 4


 <State 8>: 6.79ns
ST_8: tmp_19 (96)  [1/1] 6.79ns  loc: lenet/lenet_hls.c:169
._crit_edge:14  %tmp_19 = fcmp ogt float %max_value_1, %c1_o_2_load


 <State 9>: 7.34ns
ST_9: max_value_1_to_int (83)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
._crit_edge:1  %max_value_1_to_int = bitcast float %max_value_1 to i32

ST_9: tmp_12 (84)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
._crit_edge:2  %tmp_12 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %max_value_1_to_int, i32 23, i32 30)

ST_9: tmp_41 (85)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
._crit_edge:3  %tmp_41 = trunc i32 %max_value_1_to_int to i23

ST_9: c1_o_2_load_to_int (86)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
._crit_edge:4  %c1_o_2_load_to_int = bitcast float %c1_o_2_load to i32

ST_9: tmp_14 (87)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
._crit_edge:5  %tmp_14 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %c1_o_2_load_to_int, i32 23, i32 30)

ST_9: tmp_42 (88)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169
._crit_edge:6  %tmp_42 = trunc i32 %c1_o_2_load_to_int to i23

ST_9: notlhs (89)  [1/1] 2.91ns  loc: lenet/lenet_hls.c:169
._crit_edge:7  %notlhs = icmp ne i8 %tmp_12, -1

ST_9: notrhs (90)  [1/1] 3.20ns  loc: lenet/lenet_hls.c:169
._crit_edge:8  %notrhs = icmp eq i23 %tmp_41, 0

ST_9: tmp_16 (91)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169 (grouped into LUT with out node tmp_20)
._crit_edge:9  %tmp_16 = or i1 %notrhs, %notlhs

ST_9: notlhs4 (92)  [1/1] 2.91ns  loc: lenet/lenet_hls.c:169
._crit_edge:10  %notlhs4 = icmp ne i8 %tmp_14, -1

ST_9: notrhs5 (93)  [1/1] 3.20ns  loc: lenet/lenet_hls.c:169
._crit_edge:11  %notrhs5 = icmp eq i23 %tmp_42, 0

ST_9: tmp_17 (94)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169 (grouped into LUT with out node tmp_20)
._crit_edge:12  %tmp_17 = or i1 %notrhs5, %notlhs4

ST_9: tmp_18 (95)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:169 (grouped into LUT with out node tmp_20)
._crit_edge:13  %tmp_18 = and i1 %tmp_16, %tmp_17

ST_9: tmp_20 (97)  [1/1] 2.07ns  loc: lenet/lenet_hls.c:169 (out node of the LUT)
._crit_edge:15  %tmp_20 = and i1 %tmp_18, %tmp_19

ST_9: max_value_3 (98)  [1/1] 2.07ns  loc: lenet/lenet_hls.c:169 (out node of the LUT)
._crit_edge:16  %max_value_3 = select i1 %tmp_20, float %max_value_1, float %c1_o_2_load

ST_9: StgValue_105 (100)  [1/1] 0.00ns  loc: lenet/lenet_hls.c:168
._crit_edge:18  br label %.preheader4



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('c') with incoming values : ('c', lenet/lenet_hls.c:163) [5]  (1.59 ns)

 <State 2>: 2.32ns
The critical path consists of the following:
	'phi' operation ('c') with incoming values : ('c', lenet/lenet_hls.c:163) [5]  (0 ns)
	'sub' operation ('tmp_29', lenet/lenet_hls.c:169) [16]  (2.32 ns)

 <State 3>: 4.65ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', lenet/lenet_hls.c:164) [25]  (0 ns)
	'add' operation ('tmp_30', lenet/lenet_hls.c:172) [27]  (2.32 ns)
	'sub' operation ('tmp_33', lenet/lenet_hls.c:172) [32]  (2.33 ns)

 <State 4>: 3.1ns
The critical path consists of the following:
	'phi' operation ('w') with incoming values : ('w', lenet/lenet_hls.c:165) [44]  (0 ns)
	'icmp' operation ('exitcond', lenet/lenet_hls.c:165) [49]  (3.1 ns)

 <State 5>: 5.24ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i_cast', lenet/lenet_hls.c:167) ('i', lenet/lenet_hls.c:167) [60]  (0 ns)
	'add' operation ('tmp_35', lenet/lenet_hls.c:169) [62]  (2.9 ns)
	'sub' operation ('tmp_38', lenet/lenet_hls.c:169) [67]  (2.34 ns)

 <State 6>: 5.6ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j_cast', lenet/lenet_hls.c:168) ('j', lenet/lenet_hls.c:168) [73]  (0 ns)
	'add' operation ('tmp_40', lenet/lenet_hls.c:169) [76]  (2.34 ns)
	'getelementptr' operation ('c1_o_2_addr', lenet/lenet_hls.c:169) [78]  (0 ns)
	'load' operation ('c1_o_2_load', lenet/lenet_hls.c:169) on array 'c1_o_2' [82]  (3.25 ns)

 <State 7>: 3.25ns
The critical path consists of the following:
	'load' operation ('c1_o_2_load', lenet/lenet_hls.c:169) on array 'c1_o_2' [82]  (3.25 ns)

 <State 8>: 6.79ns
The critical path consists of the following:
	'fcmp' operation ('tmp_19', lenet/lenet_hls.c:169) [96]  (6.79 ns)

 <State 9>: 7.34ns
The critical path consists of the following:
	'icmp' operation ('notrhs', lenet/lenet_hls.c:169) [90]  (3.2 ns)
	'or' operation ('tmp_16', lenet/lenet_hls.c:169) [91]  (0 ns)
	'and' operation ('tmp_18', lenet/lenet_hls.c:169) [95]  (0 ns)
	'and' operation ('tmp_20', lenet/lenet_hls.c:169) [97]  (2.07 ns)
	'select' operation ('max_value', lenet/lenet_hls.c:169) [98]  (2.07 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
