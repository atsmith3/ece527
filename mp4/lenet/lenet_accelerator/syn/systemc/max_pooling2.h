// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pooling2_HH_
#define _max_pooling2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenet_wrapper_fcmdEe.h"

namespace ap_rtl {

struct max_pooling2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_out< sc_lv<13> > c1_o_2_address0;
    sc_out< sc_logic > c1_o_2_ce0;
    sc_in< sc_lv<32> > c1_o_2_q0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pooling2(sc_module_name name);
    SC_HAS_PROCESS(max_pooling2);

    ~max_pooling2();

    sc_trace_file* mVcdFile;

    lenet_wrapper_fcmdEe<1,1,32,32,1>* lenet_wrapper_fcmdEe_U27;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > tmp_28_cast_fu_199_p1;
    sc_signal< sc_lv<9> > tmp_28_cast_reg_530;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > tmp_31_cast_fu_233_p1;
    sc_signal< sc_lv<32> > tmp_31_cast_reg_535;
    sc_signal< sc_lv<3> > c_2_fu_243_p2;
    sc_signal< sc_lv<3> > c_2_reg_543;
    sc_signal< sc_lv<12> > tmp_33_fu_282_p2;
    sc_signal< sc_lv<12> > tmp_33_reg_548;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > h_2_fu_294_p2;
    sc_signal< sc_lv<4> > h_2_reg_556;
    sc_signal< sc_lv<32> > i_cast_fu_308_p1;
    sc_signal< sc_lv<32> > i_cast_reg_561;
    sc_signal< sc_lv<1> > exitcond1_fu_288_p2;
    sc_signal< sc_lv<32> > tmp_cast_fu_318_p1;
    sc_signal< sc_lv<32> > tmp_cast_reg_566;
    sc_signal< sc_lv<11> > output_addr_reg_571;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > w_2_fu_342_p2;
    sc_signal< sc_lv<4> > w_2_reg_579;
    sc_signal< sc_lv<32> > j_cast_fu_356_p1;
    sc_signal< sc_lv<32> > j_cast_reg_584;
    sc_signal< sc_lv<1> > exitcond_fu_336_p2;
    sc_signal< sc_lv<32> > tmp_cast_9_fu_366_p1;
    sc_signal< sc_lv<32> > tmp_cast_9_reg_589;
    sc_signal< sc_lv<14> > tmp_38_fu_399_p2;
    sc_signal< sc_lv<14> > tmp_38_reg_594;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > j_2_fu_429_p2;
    sc_signal< sc_lv<32> > j_2_reg_610;
    sc_signal< sc_lv<1> > tmp_3_fu_424_p2;
    sc_signal< sc_lv<32> > i_2_fu_435_p2;
    sc_signal< sc_lv<32> > c1_o_2_load_reg_620;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > tmp_19_fu_164_p2;
    sc_signal< sc_lv<1> > tmp_19_reg_627;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > max_value_3_fu_523_p3;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<3> > c_reg_87;
    sc_signal< sc_lv<4> > h_reg_98;
    sc_signal< sc_lv<1> > exitcond2_fu_237_p2;
    sc_signal< sc_lv<4> > w_reg_109;
    sc_signal< sc_lv<1> > tmp_2_fu_405_p2;
    sc_signal< sc_lv<32> > i8_reg_120;
    sc_signal< sc_lv<32> > max_value_reg_130;
    sc_signal< sc_lv<32> > j7_reg_143;
    sc_signal< sc_lv<32> > max_value_1_reg_152;
    sc_signal< sc_lv<32> > tmp_36_cast_fu_331_p1;
    sc_signal< sc_lv<32> > tmp_41_cast_fu_419_p1;
    sc_signal< sc_lv<7> > tmp_24_fu_169_p3;
    sc_signal< sc_lv<4> > tmp_25_fu_181_p3;
    sc_signal< sc_lv<8> > p_shl2_cast_fu_177_p1;
    sc_signal< sc_lv<8> > p_shl3_cast_fu_189_p1;
    sc_signal< sc_lv<8> > tmp_26_fu_193_p2;
    sc_signal< sc_lv<8> > tmp_27_fu_203_p3;
    sc_signal< sc_lv<5> > tmp_28_fu_215_p3;
    sc_signal< sc_lv<9> > p_shl_cast_fu_211_p1;
    sc_signal< sc_lv<9> > p_shl1_cast_fu_223_p1;
    sc_signal< sc_lv<9> > tmp_29_fu_227_p2;
    sc_signal< sc_lv<9> > h_cast2_cast_fu_249_p1;
    sc_signal< sc_lv<9> > tmp_30_fu_253_p2;
    sc_signal< sc_lv<8> > tmp_31_fu_258_p1;
    sc_signal< sc_lv<10> > tmp_32_fu_270_p3;
    sc_signal< sc_lv<12> > p_shl4_cast_fu_262_p3;
    sc_signal< sc_lv<12> > p_shl5_cast_fu_278_p1;
    sc_signal< sc_lv<5> > i_fu_300_p3;
    sc_signal< sc_lv<5> > tmp_s_fu_312_p2;
    sc_signal< sc_lv<12> > w_cast1_cast_fu_322_p1;
    sc_signal< sc_lv<12> > tmp_34_fu_326_p2;
    sc_signal< sc_lv<5> > j_fu_348_p3;
    sc_signal< sc_lv<5> > tmp_fu_360_p2;
    sc_signal< sc_lv<32> > tmp_35_fu_370_p2;
    sc_signal< sc_lv<9> > tmp_36_fu_375_p1;
    sc_signal< sc_lv<12> > tmp_37_fu_387_p1;
    sc_signal< sc_lv<14> > p_shl6_cast_fu_379_p3;
    sc_signal< sc_lv<14> > p_shl7_cast_fu_391_p3;
    sc_signal< sc_lv<14> > tmp_39_fu_410_p1;
    sc_signal< sc_lv<14> > tmp_40_fu_414_p2;
    sc_signal< sc_lv<32> > max_value_1_to_int_fu_441_p1;
    sc_signal< sc_lv<32> > c1_o_2_load_to_int_fu_459_p1;
    sc_signal< sc_lv<8> > tmp_12_fu_445_p4;
    sc_signal< sc_lv<23> > tmp_41_fu_455_p1;
    sc_signal< sc_lv<1> > notrhs_fu_482_p2;
    sc_signal< sc_lv<1> > notlhs_fu_476_p2;
    sc_signal< sc_lv<8> > tmp_14_fu_462_p4;
    sc_signal< sc_lv<23> > tmp_42_fu_472_p1;
    sc_signal< sc_lv<1> > notrhs5_fu_500_p2;
    sc_signal< sc_lv<1> > notlhs4_fu_494_p2;
    sc_signal< sc_lv<1> > tmp_16_fu_488_p2;
    sc_signal< sc_lv<1> > tmp_17_fu_506_p2;
    sc_signal< sc_lv<1> > tmp_18_fu_512_p2;
    sc_signal< sc_lv<1> > tmp_20_fu_518_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_D368D4A5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c1_o_2_address0();
    void thread_c1_o_2_ce0();
    void thread_c1_o_2_load_to_int_fu_459_p1();
    void thread_c_2_fu_243_p2();
    void thread_exitcond1_fu_288_p2();
    void thread_exitcond2_fu_237_p2();
    void thread_exitcond_fu_336_p2();
    void thread_h_2_fu_294_p2();
    void thread_h_cast2_cast_fu_249_p1();
    void thread_i_2_fu_435_p2();
    void thread_i_cast_fu_308_p1();
    void thread_i_fu_300_p3();
    void thread_j_2_fu_429_p2();
    void thread_j_cast_fu_356_p1();
    void thread_j_fu_348_p3();
    void thread_max_value_1_to_int_fu_441_p1();
    void thread_max_value_3_fu_523_p3();
    void thread_notlhs4_fu_494_p2();
    void thread_notlhs_fu_476_p2();
    void thread_notrhs5_fu_500_p2();
    void thread_notrhs_fu_482_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_223_p1();
    void thread_p_shl2_cast_fu_177_p1();
    void thread_p_shl3_cast_fu_189_p1();
    void thread_p_shl4_cast_fu_262_p3();
    void thread_p_shl5_cast_fu_278_p1();
    void thread_p_shl6_cast_fu_379_p3();
    void thread_p_shl7_cast_fu_391_p3();
    void thread_p_shl_cast_fu_211_p1();
    void thread_tmp_12_fu_445_p4();
    void thread_tmp_14_fu_462_p4();
    void thread_tmp_16_fu_488_p2();
    void thread_tmp_17_fu_506_p2();
    void thread_tmp_18_fu_512_p2();
    void thread_tmp_20_fu_518_p2();
    void thread_tmp_24_fu_169_p3();
    void thread_tmp_25_fu_181_p3();
    void thread_tmp_26_fu_193_p2();
    void thread_tmp_27_fu_203_p3();
    void thread_tmp_28_cast_fu_199_p1();
    void thread_tmp_28_fu_215_p3();
    void thread_tmp_29_fu_227_p2();
    void thread_tmp_2_fu_405_p2();
    void thread_tmp_30_fu_253_p2();
    void thread_tmp_31_cast_fu_233_p1();
    void thread_tmp_31_fu_258_p1();
    void thread_tmp_32_fu_270_p3();
    void thread_tmp_33_fu_282_p2();
    void thread_tmp_34_fu_326_p2();
    void thread_tmp_35_fu_370_p2();
    void thread_tmp_36_cast_fu_331_p1();
    void thread_tmp_36_fu_375_p1();
    void thread_tmp_37_fu_387_p1();
    void thread_tmp_38_fu_399_p2();
    void thread_tmp_39_fu_410_p1();
    void thread_tmp_3_fu_424_p2();
    void thread_tmp_40_fu_414_p2();
    void thread_tmp_41_cast_fu_419_p1();
    void thread_tmp_41_fu_455_p1();
    void thread_tmp_42_fu_472_p1();
    void thread_tmp_cast_9_fu_366_p1();
    void thread_tmp_cast_fu_318_p1();
    void thread_tmp_fu_360_p2();
    void thread_tmp_s_fu_312_p2();
    void thread_w_2_fu_342_p2();
    void thread_w_cast1_cast_fu_322_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
