// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _copy_out_HH_
#define _copy_out_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct copy_out : public sc_module {
    // Port declarations 55
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_out_r_AWVALID;
    sc_in< sc_logic > m_axi_out_r_AWREADY;
    sc_out< sc_lv<32> > m_axi_out_r_AWADDR;
    sc_out< sc_lv<1> > m_axi_out_r_AWID;
    sc_out< sc_lv<32> > m_axi_out_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_out_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_out_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_out_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_out_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_out_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_out_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_out_r_AWREGION;
    sc_out< sc_lv<1> > m_axi_out_r_AWUSER;
    sc_out< sc_logic > m_axi_out_r_WVALID;
    sc_in< sc_logic > m_axi_out_r_WREADY;
    sc_out< sc_lv<32> > m_axi_out_r_WDATA;
    sc_out< sc_lv<4> > m_axi_out_r_WSTRB;
    sc_out< sc_logic > m_axi_out_r_WLAST;
    sc_out< sc_lv<1> > m_axi_out_r_WID;
    sc_out< sc_lv<1> > m_axi_out_r_WUSER;
    sc_out< sc_logic > m_axi_out_r_ARVALID;
    sc_in< sc_logic > m_axi_out_r_ARREADY;
    sc_out< sc_lv<32> > m_axi_out_r_ARADDR;
    sc_out< sc_lv<1> > m_axi_out_r_ARID;
    sc_out< sc_lv<32> > m_axi_out_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_out_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_out_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_out_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_out_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_out_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_out_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_out_r_ARREGION;
    sc_out< sc_lv<1> > m_axi_out_r_ARUSER;
    sc_in< sc_logic > m_axi_out_r_RVALID;
    sc_out< sc_logic > m_axi_out_r_RREADY;
    sc_in< sc_lv<32> > m_axi_out_r_RDATA;
    sc_in< sc_logic > m_axi_out_r_RLAST;
    sc_in< sc_lv<1> > m_axi_out_r_RID;
    sc_in< sc_lv<1> > m_axi_out_r_RUSER;
    sc_in< sc_lv<2> > m_axi_out_r_RRESP;
    sc_in< sc_logic > m_axi_out_r_BVALID;
    sc_out< sc_logic > m_axi_out_r_BREADY;
    sc_in< sc_lv<2> > m_axi_out_r_BRESP;
    sc_in< sc_lv<1> > m_axi_out_r_BID;
    sc_in< sc_lv<1> > m_axi_out_r_BUSER;
    sc_in< sc_lv<30> > fc6_o_o15;
    sc_out< sc_lv<4> > fc6_o_address0;
    sc_out< sc_logic > fc6_o_ce0;
    sc_in< sc_lv<32> > fc6_o_q0;


    // Module declarations
    copy_out(sc_module_name name);
    SC_HAS_PROCESS(copy_out);

    ~copy_out();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > out_r_blk_n_AW;
    sc_signal< sc_logic > out_r_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > out_r_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_out_r_AWREADY;
    sc_signal< sc_lv<4> > i_12_fu_104_p2;
    sc_signal< sc_lv<4> > i_12_reg_118;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_fu_98_p2;
    sc_signal< sc_lv<32> > fc6_o_load_reg_128;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > i_reg_71;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_out_r_WREADY;
    sc_signal< sc_lv<32> > i_cast1_fu_93_p1;
    sc_signal< sc_lv<32> > fc6_o_o15_cast1_fu_82_p1;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_out_r_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_out_r_WREADY;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_m_axi_out_r_AWREADY();
    void thread_ap_sig_ioackin_m_axi_out_r_WREADY();
    void thread_exitcond_fu_98_p2();
    void thread_fc6_o_address0();
    void thread_fc6_o_ce0();
    void thread_fc6_o_o15_cast1_fu_82_p1();
    void thread_i_12_fu_104_p2();
    void thread_i_cast1_fu_93_p1();
    void thread_m_axi_out_r_ARADDR();
    void thread_m_axi_out_r_ARBURST();
    void thread_m_axi_out_r_ARCACHE();
    void thread_m_axi_out_r_ARID();
    void thread_m_axi_out_r_ARLEN();
    void thread_m_axi_out_r_ARLOCK();
    void thread_m_axi_out_r_ARPROT();
    void thread_m_axi_out_r_ARQOS();
    void thread_m_axi_out_r_ARREGION();
    void thread_m_axi_out_r_ARSIZE();
    void thread_m_axi_out_r_ARUSER();
    void thread_m_axi_out_r_ARVALID();
    void thread_m_axi_out_r_AWADDR();
    void thread_m_axi_out_r_AWBURST();
    void thread_m_axi_out_r_AWCACHE();
    void thread_m_axi_out_r_AWID();
    void thread_m_axi_out_r_AWLEN();
    void thread_m_axi_out_r_AWLOCK();
    void thread_m_axi_out_r_AWPROT();
    void thread_m_axi_out_r_AWQOS();
    void thread_m_axi_out_r_AWREGION();
    void thread_m_axi_out_r_AWSIZE();
    void thread_m_axi_out_r_AWUSER();
    void thread_m_axi_out_r_AWVALID();
    void thread_m_axi_out_r_BREADY();
    void thread_m_axi_out_r_RREADY();
    void thread_m_axi_out_r_WDATA();
    void thread_m_axi_out_r_WID();
    void thread_m_axi_out_r_WLAST();
    void thread_m_axi_out_r_WSTRB();
    void thread_m_axi_out_r_WUSER();
    void thread_m_axi_out_r_WVALID();
    void thread_out_r_blk_n_AW();
    void thread_out_r_blk_n_B();
    void thread_out_r_blk_n_W();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
