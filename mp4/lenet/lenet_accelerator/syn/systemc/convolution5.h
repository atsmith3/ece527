// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _convolution5_HH_
#define _convolution5_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenet_wrapper_fadbkb.h"
#include "lenet_wrapper_fmucud.h"

namespace ap_rtl {

struct convolution5 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<16> > conv5_w_address0;
    sc_out< sc_logic > conv5_w_ce0;
    sc_in< sc_lv<32> > conv5_w_q0;
    sc_out< sc_lv<7> > conv5_b_address0;
    sc_out< sc_logic > conv5_b_ce0;
    sc_in< sc_lv<32> > conv5_b_q0;
    sc_out< sc_lv<7> > output_0_0_address0;
    sc_out< sc_logic > output_0_0_ce0;
    sc_out< sc_logic > output_0_0_we0;
    sc_out< sc_lv<32> > output_0_0_d0;
    sc_out< sc_lv<9> > p4_o_2_address0;
    sc_out< sc_logic > p4_o_2_ce0;
    sc_in< sc_lv<32> > p4_o_2_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    convolution5(sc_module_name name);
    SC_HAS_PROCESS(convolution5);

    ~convolution5();

    sc_trace_file* mVcdFile;

    lenet_wrapper_fadbkb<1,5,32,32,32>* lenet_wrapper_fadbkb_x_U39;
    lenet_wrapper_fmucud<1,4,32,32,32>* lenet_wrapper_fmucud_x_U40;
    sc_signal< sc_lv<23> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > co_cast4_fu_189_p1;
    sc_signal< sc_lv<32> > co_cast4_reg_390;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > tmp_150_cast_fu_201_p1;
    sc_signal< sc_lv<12> > tmp_150_cast_reg_396;
    sc_signal< sc_lv<7> > co_1_fu_211_p2;
    sc_signal< sc_lv<7> > co_1_reg_404;
    sc_signal< sc_lv<32> > i_cast3_fu_217_p1;
    sc_signal< sc_lv<32> > i_cast3_reg_409;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > i_cast3_cast_fu_221_p1;
    sc_signal< sc_lv<8> > i_cast3_cast_reg_414;
    sc_signal< sc_lv<3> > m_fu_231_p2;
    sc_signal< sc_lv<3> > m_reg_422;
    sc_signal< sc_lv<1> > exitcond2_fu_225_p2;
    sc_signal< sc_lv<10> > j_cast2_cast1_fu_237_p1;
    sc_signal< sc_lv<10> > j_cast2_cast1_reg_432;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<17> > j_cast2_cast_fu_241_p1;
    sc_signal< sc_lv<17> > j_cast2_cast_reg_437;
    sc_signal< sc_lv<3> > n_fu_251_p2;
    sc_signal< sc_lv<3> > n_reg_445;
    sc_signal< sc_lv<17> > tmp_146_fu_297_p1;
    sc_signal< sc_lv<17> > tmp_146_reg_450;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<15> > tmp_147_fu_301_p1;
    sc_signal< sc_lv<15> > tmp_147_reg_455;
    sc_signal< sc_lv<9> > p4_o_2_addr_reg_460;
    sc_signal< sc_lv<1> > exitcond_fu_356_p2;
    sc_signal< sc_lv<1> > exitcond_reg_465;
    sc_signal< sc_lv<5> > ci_1_fu_362_p2;
    sc_signal< sc_lv<5> > ci_1_reg_469;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > conv5_w_load_reg_479;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > p4_o_2_load_reg_484;
    sc_signal< sc_lv<32> > grp_fu_185_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_489;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > grp_fu_179_p2;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > conv5_b_load_reg_499;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<32> > tmp_reg_504;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<7> > co_reg_99;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<3> > i_reg_110;
    sc_signal< sc_lv<1> > exitcond1_fu_245_p2;
    sc_signal< sc_lv<1> > exitcond3_fu_205_p2;
    sc_signal< sc_lv<32> > sum_reg_121;
    sc_signal< sc_lv<3> > j_reg_133;
    sc_signal< sc_lv<32> > sum_1_reg_144;
    sc_signal< sc_lv<5> > ci_reg_156;
    sc_signal< sc_lv<32> > sum_2_reg_167;
    sc_signal< sc_lv<32> > tmp_163_cast_fu_351_p1;
    sc_signal< sc_lv<32> > tmp_157_cast_fu_385_p1;
    sc_signal< sc_lv<32> > grp_fu_179_p0;
    sc_signal< sc_lv<32> > grp_fu_179_p1;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<11> > tmp_142_fu_193_p3;
    sc_signal< sc_lv<12> > ci_cast1_cast_fu_261_p1;
    sc_signal< sc_lv<12> > tmp_143_fu_265_p2;
    sc_signal< sc_lv<14> > tmp_141_fu_274_p3;
    sc_signal< sc_lv<32> > p_shl3_fu_282_p1;
    sc_signal< sc_lv<32> > tmp_151_cast_fu_270_p1;
    sc_signal< sc_lv<32> > tmp_144_fu_286_p2;
    sc_signal< sc_lv<32> > tmp_145_fu_292_p2;
    sc_signal< sc_lv<7> > tmp_150_fu_305_p3;
    sc_signal< sc_lv<8> > p_shl1_cast_fu_313_p1;
    sc_signal< sc_lv<8> > ci_cast1_cast1_fu_257_p1;
    sc_signal< sc_lv<8> > tmp_151_fu_317_p2;
    sc_signal< sc_lv<8> > tmp_152_fu_323_p2;
    sc_signal< sc_lv<10> > p_shl_cast_fu_332_p3;
    sc_signal< sc_lv<10> > tmp_160_cast_fu_328_p1;
    sc_signal< sc_lv<10> > tmp_153_fu_340_p2;
    sc_signal< sc_lv<10> > tmp_154_fu_346_p2;
    sc_signal< sc_lv<17> > p_shl2_cast_fu_368_p3;
    sc_signal< sc_lv<17> > tmp_148_fu_375_p2;
    sc_signal< sc_lv<17> > tmp_149_fu_380_p2;
    sc_signal< sc_lv<23> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<23> ap_ST_fsm_state1;
    static const sc_lv<23> ap_ST_fsm_state2;
    static const sc_lv<23> ap_ST_fsm_state3;
    static const sc_lv<23> ap_ST_fsm_state4;
    static const sc_lv<23> ap_ST_fsm_state5;
    static const sc_lv<23> ap_ST_fsm_state6;
    static const sc_lv<23> ap_ST_fsm_state7;
    static const sc_lv<23> ap_ST_fsm_state8;
    static const sc_lv<23> ap_ST_fsm_state9;
    static const sc_lv<23> ap_ST_fsm_state10;
    static const sc_lv<23> ap_ST_fsm_state11;
    static const sc_lv<23> ap_ST_fsm_state12;
    static const sc_lv<23> ap_ST_fsm_state13;
    static const sc_lv<23> ap_ST_fsm_state14;
    static const sc_lv<23> ap_ST_fsm_state15;
    static const sc_lv<23> ap_ST_fsm_state16;
    static const sc_lv<23> ap_ST_fsm_state17;
    static const sc_lv<23> ap_ST_fsm_state18;
    static const sc_lv<23> ap_ST_fsm_state19;
    static const sc_lv<23> ap_ST_fsm_state20;
    static const sc_lv<23> ap_ST_fsm_state21;
    static const sc_lv<23> ap_ST_fsm_state22;
    static const sc_lv<23> ap_ST_fsm_state23;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_78;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ci_1_fu_362_p2();
    void thread_ci_cast1_cast1_fu_257_p1();
    void thread_ci_cast1_cast_fu_261_p1();
    void thread_co_1_fu_211_p2();
    void thread_co_cast4_fu_189_p1();
    void thread_conv5_b_address0();
    void thread_conv5_b_ce0();
    void thread_conv5_w_address0();
    void thread_conv5_w_ce0();
    void thread_exitcond1_fu_245_p2();
    void thread_exitcond2_fu_225_p2();
    void thread_exitcond3_fu_205_p2();
    void thread_exitcond_fu_356_p2();
    void thread_grp_fu_179_p0();
    void thread_grp_fu_179_p1();
    void thread_i_cast3_cast_fu_221_p1();
    void thread_i_cast3_fu_217_p1();
    void thread_j_cast2_cast1_fu_237_p1();
    void thread_j_cast2_cast_fu_241_p1();
    void thread_m_fu_231_p2();
    void thread_n_fu_251_p2();
    void thread_output_0_0_address0();
    void thread_output_0_0_ce0();
    void thread_output_0_0_d0();
    void thread_output_0_0_we0();
    void thread_p4_o_2_address0();
    void thread_p4_o_2_ce0();
    void thread_p_shl1_cast_fu_313_p1();
    void thread_p_shl2_cast_fu_368_p3();
    void thread_p_shl3_fu_282_p1();
    void thread_p_shl_cast_fu_332_p3();
    void thread_tmp_141_fu_274_p3();
    void thread_tmp_142_fu_193_p3();
    void thread_tmp_143_fu_265_p2();
    void thread_tmp_144_fu_286_p2();
    void thread_tmp_145_fu_292_p2();
    void thread_tmp_146_fu_297_p1();
    void thread_tmp_147_fu_301_p1();
    void thread_tmp_148_fu_375_p2();
    void thread_tmp_149_fu_380_p2();
    void thread_tmp_150_cast_fu_201_p1();
    void thread_tmp_150_fu_305_p3();
    void thread_tmp_151_cast_fu_270_p1();
    void thread_tmp_151_fu_317_p2();
    void thread_tmp_152_fu_323_p2();
    void thread_tmp_153_fu_340_p2();
    void thread_tmp_154_fu_346_p2();
    void thread_tmp_157_cast_fu_385_p1();
    void thread_tmp_160_cast_fu_328_p1();
    void thread_tmp_163_cast_fu_351_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
