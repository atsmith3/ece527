// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "max_pooling4.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic max_pooling4::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic max_pooling4::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> max_pooling4::ap_ST_fsm_state1 = "1";
const sc_lv<9> max_pooling4::ap_ST_fsm_state2 = "10";
const sc_lv<9> max_pooling4::ap_ST_fsm_state3 = "100";
const sc_lv<9> max_pooling4::ap_ST_fsm_state4 = "1000";
const sc_lv<9> max_pooling4::ap_ST_fsm_state5 = "10000";
const sc_lv<9> max_pooling4::ap_ST_fsm_state6 = "100000";
const sc_lv<9> max_pooling4::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> max_pooling4::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> max_pooling4::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> max_pooling4::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> max_pooling4::ap_const_lv32_1 = "1";
const sc_lv<32> max_pooling4::ap_const_lv32_2 = "10";
const sc_lv<1> max_pooling4::ap_const_lv1_0 = "0";
const sc_lv<32> max_pooling4::ap_const_lv32_3 = "11";
const sc_lv<32> max_pooling4::ap_const_lv32_4 = "100";
const sc_lv<32> max_pooling4::ap_const_lv32_5 = "101";
const sc_lv<1> max_pooling4::ap_const_lv1_1 = "1";
const sc_lv<32> max_pooling4::ap_const_lv32_6 = "110";
const sc_lv<32> max_pooling4::ap_const_lv32_7 = "111";
const sc_lv<32> max_pooling4::ap_const_lv32_8 = "1000";
const sc_lv<5> max_pooling4::ap_const_lv5_0 = "00000";
const sc_lv<3> max_pooling4::ap_const_lv3_0 = "000";
const sc_lv<32> max_pooling4::ap_const_lv32_D368D4A5 = "11010011011010001101010010100101";
const sc_lv<2> max_pooling4::ap_const_lv2_0 = "00";
const sc_lv<5> max_pooling4::ap_const_lv5_10 = "10000";
const sc_lv<5> max_pooling4::ap_const_lv5_1 = "1";
const sc_lv<3> max_pooling4::ap_const_lv3_5 = "101";
const sc_lv<3> max_pooling4::ap_const_lv3_1 = "1";
const sc_lv<4> max_pooling4::ap_const_lv4_2 = "10";
const sc_lv<32> max_pooling4::ap_const_lv32_17 = "10111";
const sc_lv<32> max_pooling4::ap_const_lv32_1E = "11110";
const sc_lv<8> max_pooling4::ap_const_lv8_FF = "11111111";
const sc_lv<23> max_pooling4::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> max_pooling4::ap_const_lv5_2 = "10";
const bool max_pooling4::ap_const_boolean_1 = true;

max_pooling4::max_pooling4(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lenet_wrapper_fcmdEe_x_U36 = new lenet_wrapper_fcmdEe<1,1,32,32,1>("lenet_wrapper_fcmdEe_x_U36");
    lenet_wrapper_fcmdEe_x_U36->din0(max_value_1_reg_146);
    lenet_wrapper_fcmdEe_x_U36->din1(c3_o_2_load_reg_590);
    lenet_wrapper_fcmdEe_x_U36->opcode(ap_var_for_const0);
    lenet_wrapper_fcmdEe_x_U36->dout(tmp_10_fu_158_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_219_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_219_p2 );

    SC_METHOD(thread_c3_o_2_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_25_cast_fu_389_p1 );

    SC_METHOD(thread_c3_o_2_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_c3_o_2_load_to_int_fu_429_p1);
    sensitive << ( c3_o_2_load_reg_590 );

    SC_METHOD(thread_c_1_fu_225_p2);
    sensitive << ( c_reg_81 );

    SC_METHOD(thread_c_cast3_cast_fu_163_p1);
    sensitive << ( c_reg_81 );

    SC_METHOD(thread_exitcond1_fu_258_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( h_reg_92 );

    SC_METHOD(thread_exitcond2_fu_219_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( c_reg_81 );

    SC_METHOD(thread_exitcond_fu_306_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( w_reg_103 );

    SC_METHOD(thread_h_1_fu_264_p2);
    sensitive << ( h_reg_92 );

    SC_METHOD(thread_h_cast2_cast_fu_231_p1);
    sensitive << ( h_reg_92 );

    SC_METHOD(thread_i_1_fu_405_p2);
    sensitive << ( i6_reg_114 );

    SC_METHOD(thread_i_cast_fu_278_p1);
    sensitive << ( i_fu_270_p3 );

    SC_METHOD(thread_i_fu_270_p3);
    sensitive << ( h_reg_92 );

    SC_METHOD(thread_j_1_fu_399_p2);
    sensitive << ( j5_reg_137 );

    SC_METHOD(thread_j_cast_fu_326_p1);
    sensitive << ( j_fu_318_p3 );

    SC_METHOD(thread_j_fu_318_p3);
    sensitive << ( w_reg_103 );

    SC_METHOD(thread_max_value_1_to_int_fu_411_p1);
    sensitive << ( max_value_1_reg_146 );

    SC_METHOD(thread_max_value_2_fu_493_p3);
    sensitive << ( c3_o_2_load_reg_590 );
    sensitive << ( max_value_1_reg_146 );
    sensitive << ( tmp_11_fu_488_p2 );

    SC_METHOD(thread_notlhs4_fu_464_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_3_fu_432_p4 );

    SC_METHOD(thread_notlhs_fu_446_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_1_fu_415_p4 );

    SC_METHOD(thread_notrhs5_fu_470_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_25_fu_442_p1 );

    SC_METHOD(thread_notrhs_fu_452_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_24_fu_425_p1 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( output_addr_reg_541 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( max_value_reg_124 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_375_p2 );

    SC_METHOD(thread_p_shl1_cast_fu_205_p1);
    sensitive << ( tmp_13_fu_197_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_175_p1);
    sensitive << ( tmp_2_fu_167_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_244_p3);
    sensitive << ( tmp_15_fu_235_p2 );

    SC_METHOD(thread_p_shl4_cast_fu_349_p3);
    sensitive << ( tmp_19_fu_345_p1 );

    SC_METHOD(thread_p_shl5_cast_fu_361_p3);
    sensitive << ( tmp_20_fu_357_p1 );

    SC_METHOD(thread_p_shl_cast_fu_193_p1);
    sensitive << ( tmp_12_fu_185_p3 );

    SC_METHOD(thread_tmp_11_fu_488_p2);
    sensitive << ( tmp_10_reg_597 );
    sensitive << ( tmp_8_fu_482_p2 );

    SC_METHOD(thread_tmp_12_fu_185_p3);
    sensitive << ( c_reg_81 );

    SC_METHOD(thread_tmp_13_fu_197_p3);
    sensitive << ( c_reg_81 );

    SC_METHOD(thread_tmp_14_fu_209_p2);
    sensitive << ( p_shl1_cast_fu_205_p1 );
    sensitive << ( p_shl_cast_fu_193_p1 );

    SC_METHOD(thread_tmp_15_fu_235_p2);
    sensitive << ( tmp_4_reg_500 );
    sensitive << ( h_cast2_cast_fu_231_p1 );

    SC_METHOD(thread_tmp_16_cast_fu_215_p1);
    sensitive << ( tmp_14_fu_209_p2 );

    SC_METHOD(thread_tmp_16_fu_252_p2);
    sensitive << ( tmp_17_cast_fu_240_p1 );
    sensitive << ( p_shl3_cast_fu_244_p3 );

    SC_METHOD(thread_tmp_17_cast_fu_240_p1);
    sensitive << ( tmp_15_fu_235_p2 );

    SC_METHOD(thread_tmp_17_fu_296_p2);
    sensitive << ( tmp_16_reg_518 );
    sensitive << ( w_cast1_cast_fu_292_p1 );

    SC_METHOD(thread_tmp_18_fu_340_p2);
    sensitive << ( tmp_16_cast_reg_505 );
    sensitive << ( i6_reg_114 );

    SC_METHOD(thread_tmp_19_fu_345_p1);
    sensitive << ( tmp_18_fu_340_p2 );

    SC_METHOD(thread_tmp_1_fu_415_p4);
    sensitive << ( max_value_1_to_int_fu_411_p1 );

    SC_METHOD(thread_tmp_20_cast_fu_301_p1);
    sensitive << ( tmp_17_fu_296_p2 );

    SC_METHOD(thread_tmp_20_fu_357_p1);
    sensitive << ( tmp_18_fu_340_p2 );

    SC_METHOD(thread_tmp_21_fu_369_p2);
    sensitive << ( p_shl5_cast_fu_361_p3 );
    sensitive << ( p_shl4_cast_fu_349_p3 );

    SC_METHOD(thread_tmp_22_fu_380_p1);
    sensitive << ( j5_reg_137 );

    SC_METHOD(thread_tmp_23_fu_384_p2);
    sensitive << ( tmp_21_reg_564 );
    sensitive << ( tmp_22_fu_380_p1 );

    SC_METHOD(thread_tmp_24_fu_425_p1);
    sensitive << ( max_value_1_to_int_fu_411_p1 );

    SC_METHOD(thread_tmp_25_cast_fu_389_p1);
    sensitive << ( tmp_23_fu_384_p2 );

    SC_METHOD(thread_tmp_25_fu_442_p1);
    sensitive << ( c3_o_2_load_to_int_fu_429_p1 );

    SC_METHOD(thread_tmp_2_fu_167_p3);
    sensitive << ( c_reg_81 );

    SC_METHOD(thread_tmp_3_fu_432_p4);
    sensitive << ( c3_o_2_load_to_int_fu_429_p1 );

    SC_METHOD(thread_tmp_4_fu_179_p2);
    sensitive << ( c_cast3_cast_fu_163_p1 );
    sensitive << ( p_shl2_cast_fu_175_p1 );

    SC_METHOD(thread_tmp_5_fu_458_p2);
    sensitive << ( notrhs_fu_452_p2 );
    sensitive << ( notlhs_fu_446_p2 );

    SC_METHOD(thread_tmp_6_fu_476_p2);
    sensitive << ( notrhs5_fu_470_p2 );
    sensitive << ( notlhs4_fu_464_p2 );

    SC_METHOD(thread_tmp_7_cast_fu_288_p1);
    sensitive << ( tmp_7_fu_282_p2 );

    SC_METHOD(thread_tmp_7_fu_282_p2);
    sensitive << ( i_fu_270_p3 );

    SC_METHOD(thread_tmp_8_fu_482_p2);
    sensitive << ( tmp_5_fu_458_p2 );
    sensitive << ( tmp_6_fu_476_p2 );

    SC_METHOD(thread_tmp_9_fu_375_p2);
    sensitive << ( tmp_7_cast_reg_536 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i6_reg_114 );

    SC_METHOD(thread_tmp_cast_fu_336_p1);
    sensitive << ( tmp_fu_330_p2 );

    SC_METHOD(thread_tmp_fu_330_p2);
    sensitive << ( j_fu_318_p3 );

    SC_METHOD(thread_tmp_s_fu_394_p2);
    sensitive << ( tmp_cast_reg_559 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j5_reg_137 );

    SC_METHOD(thread_w_1_fu_312_p2);
    sensitive << ( w_reg_103 );

    SC_METHOD(thread_w_cast1_cast_fu_292_p1);
    sensitive << ( w_reg_103 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond1_fu_258_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_306_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_s_fu_394_p2 );
    sensitive << ( exitcond2_fu_219_p2 );
    sensitive << ( tmp_9_fu_375_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "max_pooling4_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, c3_o_2_address0, "(port)c3_o_2_address0");
    sc_trace(mVcdFile, c3_o_2_ce0, "(port)c3_o_2_ce0");
    sc_trace(mVcdFile, c3_o_2_q0, "(port)c3_o_2_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_4_fu_179_p2, "tmp_4_fu_179_p2");
    sc_trace(mVcdFile, tmp_4_reg_500, "tmp_4_reg_500");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_16_cast_fu_215_p1, "tmp_16_cast_fu_215_p1");
    sc_trace(mVcdFile, tmp_16_cast_reg_505, "tmp_16_cast_reg_505");
    sc_trace(mVcdFile, c_1_fu_225_p2, "c_1_fu_225_p2");
    sc_trace(mVcdFile, c_1_reg_513, "c_1_reg_513");
    sc_trace(mVcdFile, tmp_16_fu_252_p2, "tmp_16_fu_252_p2");
    sc_trace(mVcdFile, tmp_16_reg_518, "tmp_16_reg_518");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, h_1_fu_264_p2, "h_1_fu_264_p2");
    sc_trace(mVcdFile, h_1_reg_526, "h_1_reg_526");
    sc_trace(mVcdFile, i_cast_fu_278_p1, "i_cast_fu_278_p1");
    sc_trace(mVcdFile, i_cast_reg_531, "i_cast_reg_531");
    sc_trace(mVcdFile, exitcond1_fu_258_p2, "exitcond1_fu_258_p2");
    sc_trace(mVcdFile, tmp_7_cast_fu_288_p1, "tmp_7_cast_fu_288_p1");
    sc_trace(mVcdFile, tmp_7_cast_reg_536, "tmp_7_cast_reg_536");
    sc_trace(mVcdFile, output_addr_reg_541, "output_addr_reg_541");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, w_1_fu_312_p2, "w_1_fu_312_p2");
    sc_trace(mVcdFile, w_1_reg_549, "w_1_reg_549");
    sc_trace(mVcdFile, j_cast_fu_326_p1, "j_cast_fu_326_p1");
    sc_trace(mVcdFile, j_cast_reg_554, "j_cast_reg_554");
    sc_trace(mVcdFile, exitcond_fu_306_p2, "exitcond_fu_306_p2");
    sc_trace(mVcdFile, tmp_cast_fu_336_p1, "tmp_cast_fu_336_p1");
    sc_trace(mVcdFile, tmp_cast_reg_559, "tmp_cast_reg_559");
    sc_trace(mVcdFile, tmp_21_fu_369_p2, "tmp_21_fu_369_p2");
    sc_trace(mVcdFile, tmp_21_reg_564, "tmp_21_reg_564");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, j_1_fu_399_p2, "j_1_fu_399_p2");
    sc_trace(mVcdFile, j_1_reg_580, "j_1_reg_580");
    sc_trace(mVcdFile, tmp_s_fu_394_p2, "tmp_s_fu_394_p2");
    sc_trace(mVcdFile, i_1_fu_405_p2, "i_1_fu_405_p2");
    sc_trace(mVcdFile, c3_o_2_load_reg_590, "c3_o_2_load_reg_590");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_10_fu_158_p2, "tmp_10_fu_158_p2");
    sc_trace(mVcdFile, tmp_10_reg_597, "tmp_10_reg_597");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, max_value_2_fu_493_p3, "max_value_2_fu_493_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, c_reg_81, "c_reg_81");
    sc_trace(mVcdFile, h_reg_92, "h_reg_92");
    sc_trace(mVcdFile, exitcond2_fu_219_p2, "exitcond2_fu_219_p2");
    sc_trace(mVcdFile, w_reg_103, "w_reg_103");
    sc_trace(mVcdFile, tmp_9_fu_375_p2, "tmp_9_fu_375_p2");
    sc_trace(mVcdFile, i6_reg_114, "i6_reg_114");
    sc_trace(mVcdFile, max_value_reg_124, "max_value_reg_124");
    sc_trace(mVcdFile, j5_reg_137, "j5_reg_137");
    sc_trace(mVcdFile, max_value_1_reg_146, "max_value_1_reg_146");
    sc_trace(mVcdFile, tmp_20_cast_fu_301_p1, "tmp_20_cast_fu_301_p1");
    sc_trace(mVcdFile, tmp_25_cast_fu_389_p1, "tmp_25_cast_fu_389_p1");
    sc_trace(mVcdFile, tmp_2_fu_167_p3, "tmp_2_fu_167_p3");
    sc_trace(mVcdFile, c_cast3_cast_fu_163_p1, "c_cast3_cast_fu_163_p1");
    sc_trace(mVcdFile, p_shl2_cast_fu_175_p1, "p_shl2_cast_fu_175_p1");
    sc_trace(mVcdFile, tmp_12_fu_185_p3, "tmp_12_fu_185_p3");
    sc_trace(mVcdFile, tmp_13_fu_197_p3, "tmp_13_fu_197_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_205_p1, "p_shl1_cast_fu_205_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_193_p1, "p_shl_cast_fu_193_p1");
    sc_trace(mVcdFile, tmp_14_fu_209_p2, "tmp_14_fu_209_p2");
    sc_trace(mVcdFile, h_cast2_cast_fu_231_p1, "h_cast2_cast_fu_231_p1");
    sc_trace(mVcdFile, tmp_15_fu_235_p2, "tmp_15_fu_235_p2");
    sc_trace(mVcdFile, tmp_17_cast_fu_240_p1, "tmp_17_cast_fu_240_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_244_p3, "p_shl3_cast_fu_244_p3");
    sc_trace(mVcdFile, i_fu_270_p3, "i_fu_270_p3");
    sc_trace(mVcdFile, tmp_7_fu_282_p2, "tmp_7_fu_282_p2");
    sc_trace(mVcdFile, w_cast1_cast_fu_292_p1, "w_cast1_cast_fu_292_p1");
    sc_trace(mVcdFile, tmp_17_fu_296_p2, "tmp_17_fu_296_p2");
    sc_trace(mVcdFile, j_fu_318_p3, "j_fu_318_p3");
    sc_trace(mVcdFile, tmp_fu_330_p2, "tmp_fu_330_p2");
    sc_trace(mVcdFile, tmp_18_fu_340_p2, "tmp_18_fu_340_p2");
    sc_trace(mVcdFile, tmp_19_fu_345_p1, "tmp_19_fu_345_p1");
    sc_trace(mVcdFile, tmp_20_fu_357_p1, "tmp_20_fu_357_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_361_p3, "p_shl5_cast_fu_361_p3");
    sc_trace(mVcdFile, p_shl4_cast_fu_349_p3, "p_shl4_cast_fu_349_p3");
    sc_trace(mVcdFile, tmp_22_fu_380_p1, "tmp_22_fu_380_p1");
    sc_trace(mVcdFile, tmp_23_fu_384_p2, "tmp_23_fu_384_p2");
    sc_trace(mVcdFile, max_value_1_to_int_fu_411_p1, "max_value_1_to_int_fu_411_p1");
    sc_trace(mVcdFile, c3_o_2_load_to_int_fu_429_p1, "c3_o_2_load_to_int_fu_429_p1");
    sc_trace(mVcdFile, tmp_1_fu_415_p4, "tmp_1_fu_415_p4");
    sc_trace(mVcdFile, tmp_24_fu_425_p1, "tmp_24_fu_425_p1");
    sc_trace(mVcdFile, notrhs_fu_452_p2, "notrhs_fu_452_p2");
    sc_trace(mVcdFile, notlhs_fu_446_p2, "notlhs_fu_446_p2");
    sc_trace(mVcdFile, tmp_3_fu_432_p4, "tmp_3_fu_432_p4");
    sc_trace(mVcdFile, tmp_25_fu_442_p1, "tmp_25_fu_442_p1");
    sc_trace(mVcdFile, notrhs5_fu_470_p2, "notrhs5_fu_470_p2");
    sc_trace(mVcdFile, notlhs4_fu_464_p2, "notlhs4_fu_464_p2");
    sc_trace(mVcdFile, tmp_5_fu_458_p2, "tmp_5_fu_458_p2");
    sc_trace(mVcdFile, tmp_6_fu_476_p2, "tmp_6_fu_476_p2");
    sc_trace(mVcdFile, tmp_8_fu_482_p2, "tmp_8_fu_482_p2");
    sc_trace(mVcdFile, tmp_11_fu_488_p2, "tmp_11_fu_488_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

max_pooling4::~max_pooling4() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lenet_wrapper_fcmdEe_x_U36;
}

void max_pooling4::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv5_2;
}

void max_pooling4::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_258_p2.read(), ap_const_lv1_1))) {
        c_reg_81 = c_1_reg_513.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_reg_81 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_219_p2.read()))) {
        h_reg_92 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_306_p2.read(), ap_const_lv1_1))) {
        h_reg_92 = h_1_reg_526.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_394_p2.read()))) {
        i6_reg_114 = i_1_fu_405_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_306_p2.read()))) {
        i6_reg_114 = i_cast_reg_531.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_375_p2.read()))) {
        j5_reg_137 = j_cast_reg_554.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j5_reg_137 = j_1_reg_580.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_375_p2.read()))) {
        max_value_1_reg_146 = max_value_reg_124.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        max_value_1_reg_146 = max_value_2_fu_493_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_394_p2.read()))) {
        max_value_reg_124 = max_value_1_reg_146.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_306_p2.read()))) {
        max_value_reg_124 = ap_const_lv32_D368D4A5;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_258_p2.read(), ap_const_lv1_0))) {
        w_reg_103 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_375_p2.read()))) {
        w_reg_103 = w_1_reg_549.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        c3_o_2_load_reg_590 = c3_o_2_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        c_1_reg_513 = c_1_fu_225_p2.read();
        tmp_16_cast_reg_505 = tmp_16_cast_fu_215_p1.read();
        tmp_4_reg_500 = tmp_4_fu_179_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        h_1_reg_526 = h_1_fu_264_p2.read();
        tmp_16_reg_518 = tmp_16_fu_252_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond1_fu_258_p2.read(), ap_const_lv1_0))) {
        i_cast_reg_531 = i_cast_fu_278_p1.read();
        tmp_7_cast_reg_536 = tmp_7_cast_fu_288_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(tmp_s_fu_394_p2.read(), ap_const_lv1_1))) {
        j_1_reg_580 = j_1_fu_399_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_306_p2.read()))) {
        j_cast_reg_554 = j_cast_fu_326_p1.read();
        tmp_cast_reg_559 = tmp_cast_fu_336_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_addr_reg_541 =  (sc_lv<9>) (tmp_20_cast_fu_301_p1.read());
        w_1_reg_549 = w_1_fu_312_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_10_reg_597 = tmp_10_fu_158_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_21_reg_564 = tmp_21_fu_369_p2.read();
    }
}

void max_pooling4::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void max_pooling4::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void max_pooling4::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void max_pooling4::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void max_pooling4::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void max_pooling4::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void max_pooling4::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void max_pooling4::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void max_pooling4::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void max_pooling4::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_219_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void max_pooling4::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void max_pooling4::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_219_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void max_pooling4::thread_c3_o_2_address0() {
    c3_o_2_address0 =  (sc_lv<11>) (tmp_25_cast_fu_389_p1.read());
}

void max_pooling4::thread_c3_o_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        c3_o_2_ce0 = ap_const_logic_1;
    } else {
        c3_o_2_ce0 = ap_const_logic_0;
    }
}

void max_pooling4::thread_c3_o_2_load_to_int_fu_429_p1() {
    c3_o_2_load_to_int_fu_429_p1 = c3_o_2_load_reg_590.read();
}

void max_pooling4::thread_c_1_fu_225_p2() {
    c_1_fu_225_p2 = (!c_reg_81.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(c_reg_81.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void max_pooling4::thread_c_cast3_cast_fu_163_p1() {
    c_cast3_cast_fu_163_p1 = esl_zext<8,5>(c_reg_81.read());
}

void max_pooling4::thread_exitcond1_fu_258_p2() {
    exitcond1_fu_258_p2 = (!h_reg_92.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(h_reg_92.read() == ap_const_lv3_5);
}

void max_pooling4::thread_exitcond2_fu_219_p2() {
    exitcond2_fu_219_p2 = (!c_reg_81.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(c_reg_81.read() == ap_const_lv5_10);
}

void max_pooling4::thread_exitcond_fu_306_p2() {
    exitcond_fu_306_p2 = (!w_reg_103.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(w_reg_103.read() == ap_const_lv3_5);
}

void max_pooling4::thread_h_1_fu_264_p2() {
    h_1_fu_264_p2 = (!h_reg_92.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(h_reg_92.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void max_pooling4::thread_h_cast2_cast_fu_231_p1() {
    h_cast2_cast_fu_231_p1 = esl_zext<8,3>(h_reg_92.read());
}

void max_pooling4::thread_i_1_fu_405_p2() {
    i_1_fu_405_p2 = (!i6_reg_114.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i6_reg_114.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void max_pooling4::thread_i_cast_fu_278_p1() {
    i_cast_fu_278_p1 = esl_zext<32,4>(i_fu_270_p3.read());
}

void max_pooling4::thread_i_fu_270_p3() {
    i_fu_270_p3 = esl_concat<3,1>(h_reg_92.read(), ap_const_lv1_0);
}

void max_pooling4::thread_j_1_fu_399_p2() {
    j_1_fu_399_p2 = (!ap_const_lv32_1.is_01() || !j5_reg_137.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(j5_reg_137.read()));
}

void max_pooling4::thread_j_cast_fu_326_p1() {
    j_cast_fu_326_p1 = esl_zext<32,4>(j_fu_318_p3.read());
}

void max_pooling4::thread_j_fu_318_p3() {
    j_fu_318_p3 = esl_concat<3,1>(w_reg_103.read(), ap_const_lv1_0);
}

void max_pooling4::thread_max_value_1_to_int_fu_411_p1() {
    max_value_1_to_int_fu_411_p1 = max_value_1_reg_146.read();
}

void max_pooling4::thread_max_value_2_fu_493_p3() {
    max_value_2_fu_493_p3 = (!tmp_11_fu_488_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_11_fu_488_p2.read()[0].to_bool())? max_value_1_reg_146.read(): c3_o_2_load_reg_590.read());
}

void max_pooling4::thread_notlhs4_fu_464_p2() {
    notlhs4_fu_464_p2 = (!tmp_3_fu_432_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_432_p4.read() != ap_const_lv8_FF);
}

void max_pooling4::thread_notlhs_fu_446_p2() {
    notlhs_fu_446_p2 = (!tmp_1_fu_415_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_415_p4.read() != ap_const_lv8_FF);
}

void max_pooling4::thread_notrhs5_fu_470_p2() {
    notrhs5_fu_470_p2 = (!tmp_25_fu_442_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_25_fu_442_p1.read() == ap_const_lv23_0);
}

void max_pooling4::thread_notrhs_fu_452_p2() {
    notrhs_fu_452_p2 = (!tmp_24_fu_425_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_24_fu_425_p1.read() == ap_const_lv23_0);
}

void max_pooling4::thread_output_r_address0() {
    output_r_address0 = output_addr_reg_541.read();
}

void max_pooling4::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void max_pooling4::thread_output_r_d0() {
    output_r_d0 = max_value_reg_124.read();
}

void max_pooling4::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_375_p2.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void max_pooling4::thread_p_shl1_cast_fu_205_p1() {
    p_shl1_cast_fu_205_p1 = esl_zext<9,6>(tmp_13_fu_197_p3.read());
}

void max_pooling4::thread_p_shl2_cast_fu_175_p1() {
    p_shl2_cast_fu_175_p1 = esl_zext<8,7>(tmp_2_fu_167_p3.read());
}

void max_pooling4::thread_p_shl3_cast_fu_244_p3() {
    p_shl3_cast_fu_244_p3 = esl_concat<8,2>(tmp_15_fu_235_p2.read(), ap_const_lv2_0);
}

void max_pooling4::thread_p_shl4_cast_fu_349_p3() {
    p_shl4_cast_fu_349_p3 = esl_concat<9,3>(tmp_19_fu_345_p1.read(), ap_const_lv3_0);
}

void max_pooling4::thread_p_shl5_cast_fu_361_p3() {
    p_shl5_cast_fu_361_p3 = esl_concat<11,1>(tmp_20_fu_357_p1.read(), ap_const_lv1_0);
}

void max_pooling4::thread_p_shl_cast_fu_193_p1() {
    p_shl_cast_fu_193_p1 = esl_zext<9,8>(tmp_12_fu_185_p3.read());
}

void max_pooling4::thread_tmp_11_fu_488_p2() {
    tmp_11_fu_488_p2 = (tmp_8_fu_482_p2.read() & tmp_10_reg_597.read());
}

void max_pooling4::thread_tmp_12_fu_185_p3() {
    tmp_12_fu_185_p3 = esl_concat<5,3>(c_reg_81.read(), ap_const_lv3_0);
}

void max_pooling4::thread_tmp_13_fu_197_p3() {
    tmp_13_fu_197_p3 = esl_concat<5,1>(c_reg_81.read(), ap_const_lv1_0);
}

void max_pooling4::thread_tmp_14_fu_209_p2() {
    tmp_14_fu_209_p2 = (!p_shl1_cast_fu_205_p1.read().is_01() || !p_shl_cast_fu_193_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_shl1_cast_fu_205_p1.read()) + sc_biguint<9>(p_shl_cast_fu_193_p1.read()));
}

void max_pooling4::thread_tmp_15_fu_235_p2() {
    tmp_15_fu_235_p2 = (!tmp_4_reg_500.read().is_01() || !h_cast2_cast_fu_231_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_4_reg_500.read()) + sc_biguint<8>(h_cast2_cast_fu_231_p1.read()));
}

void max_pooling4::thread_tmp_16_cast_fu_215_p1() {
    tmp_16_cast_fu_215_p1 = esl_zext<32,9>(tmp_14_fu_209_p2.read());
}

void max_pooling4::thread_tmp_16_fu_252_p2() {
    tmp_16_fu_252_p2 = (!tmp_17_cast_fu_240_p1.read().is_01() || !p_shl3_cast_fu_244_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_17_cast_fu_240_p1.read()) + sc_biguint<10>(p_shl3_cast_fu_244_p3.read()));
}

void max_pooling4::thread_tmp_17_cast_fu_240_p1() {
    tmp_17_cast_fu_240_p1 = esl_zext<10,8>(tmp_15_fu_235_p2.read());
}

void max_pooling4::thread_tmp_17_fu_296_p2() {
    tmp_17_fu_296_p2 = (!tmp_16_reg_518.read().is_01() || !w_cast1_cast_fu_292_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_16_reg_518.read()) + sc_biguint<10>(w_cast1_cast_fu_292_p1.read()));
}

void max_pooling4::thread_tmp_18_fu_340_p2() {
    tmp_18_fu_340_p2 = (!tmp_16_cast_reg_505.read().is_01() || !i6_reg_114.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_16_cast_reg_505.read()) + sc_biguint<32>(i6_reg_114.read()));
}

void max_pooling4::thread_tmp_19_fu_345_p1() {
    tmp_19_fu_345_p1 = tmp_18_fu_340_p2.read().range(9-1, 0);
}

void max_pooling4::thread_tmp_1_fu_415_p4() {
    tmp_1_fu_415_p4 = max_value_1_to_int_fu_411_p1.read().range(30, 23);
}

void max_pooling4::thread_tmp_20_cast_fu_301_p1() {
    tmp_20_cast_fu_301_p1 = esl_zext<32,10>(tmp_17_fu_296_p2.read());
}

void max_pooling4::thread_tmp_20_fu_357_p1() {
    tmp_20_fu_357_p1 = tmp_18_fu_340_p2.read().range(11-1, 0);
}

void max_pooling4::thread_tmp_21_fu_369_p2() {
    tmp_21_fu_369_p2 = (!p_shl5_cast_fu_361_p3.read().is_01() || !p_shl4_cast_fu_349_p3.read().is_01())? sc_lv<12>(): (sc_biguint<12>(p_shl5_cast_fu_361_p3.read()) + sc_biguint<12>(p_shl4_cast_fu_349_p3.read()));
}

void max_pooling4::thread_tmp_22_fu_380_p1() {
    tmp_22_fu_380_p1 = j5_reg_137.read().range(12-1, 0);
}

void max_pooling4::thread_tmp_23_fu_384_p2() {
    tmp_23_fu_384_p2 = (!tmp_22_fu_380_p1.read().is_01() || !tmp_21_reg_564.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_22_fu_380_p1.read()) + sc_biguint<12>(tmp_21_reg_564.read()));
}

void max_pooling4::thread_tmp_24_fu_425_p1() {
    tmp_24_fu_425_p1 = max_value_1_to_int_fu_411_p1.read().range(23-1, 0);
}

void max_pooling4::thread_tmp_25_cast_fu_389_p1() {
    tmp_25_cast_fu_389_p1 = esl_zext<32,12>(tmp_23_fu_384_p2.read());
}

void max_pooling4::thread_tmp_25_fu_442_p1() {
    tmp_25_fu_442_p1 = c3_o_2_load_to_int_fu_429_p1.read().range(23-1, 0);
}

void max_pooling4::thread_tmp_2_fu_167_p3() {
    tmp_2_fu_167_p3 = esl_concat<5,2>(c_reg_81.read(), ap_const_lv2_0);
}

void max_pooling4::thread_tmp_3_fu_432_p4() {
    tmp_3_fu_432_p4 = c3_o_2_load_to_int_fu_429_p1.read().range(30, 23);
}

void max_pooling4::thread_tmp_4_fu_179_p2() {
    tmp_4_fu_179_p2 = (!c_cast3_cast_fu_163_p1.read().is_01() || !p_shl2_cast_fu_175_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(c_cast3_cast_fu_163_p1.read()) + sc_biguint<8>(p_shl2_cast_fu_175_p1.read()));
}

void max_pooling4::thread_tmp_5_fu_458_p2() {
    tmp_5_fu_458_p2 = (notrhs_fu_452_p2.read() | notlhs_fu_446_p2.read());
}

void max_pooling4::thread_tmp_6_fu_476_p2() {
    tmp_6_fu_476_p2 = (notrhs5_fu_470_p2.read() | notlhs4_fu_464_p2.read());
}

void max_pooling4::thread_tmp_7_cast_fu_288_p1() {
    tmp_7_cast_fu_288_p1 = esl_zext<32,4>(tmp_7_fu_282_p2.read());
}

void max_pooling4::thread_tmp_7_fu_282_p2() {
    tmp_7_fu_282_p2 = (!i_fu_270_p3.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<4>(): (sc_biguint<4>(i_fu_270_p3.read()) + sc_biguint<4>(ap_const_lv4_2));
}

void max_pooling4::thread_tmp_8_fu_482_p2() {
    tmp_8_fu_482_p2 = (tmp_5_fu_458_p2.read() & tmp_6_fu_476_p2.read());
}

void max_pooling4::thread_tmp_9_fu_375_p2() {
    tmp_9_fu_375_p2 = (!i6_reg_114.read().is_01() || !tmp_7_cast_reg_536.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i6_reg_114.read()) < sc_bigint<32>(tmp_7_cast_reg_536.read()));
}

void max_pooling4::thread_tmp_cast_fu_336_p1() {
    tmp_cast_fu_336_p1 = esl_zext<32,4>(tmp_fu_330_p2.read());
}

void max_pooling4::thread_tmp_fu_330_p2() {
    tmp_fu_330_p2 = (!j_fu_318_p3.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<4>(): (sc_biguint<4>(j_fu_318_p3.read()) + sc_biguint<4>(ap_const_lv4_2));
}

void max_pooling4::thread_tmp_s_fu_394_p2() {
    tmp_s_fu_394_p2 = (!j5_reg_137.read().is_01() || !tmp_cast_reg_559.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j5_reg_137.read()) < sc_bigint<32>(tmp_cast_reg_559.read()));
}

void max_pooling4::thread_w_1_fu_312_p2() {
    w_1_fu_312_p2 = (!w_reg_103.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(w_reg_103.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void max_pooling4::thread_w_cast1_cast_fu_292_p1() {
    w_cast1_cast_fu_292_p1 = esl_zext<10,3>(w_reg_103.read());
}

void max_pooling4::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_219_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond1_fu_258_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond_fu_306_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_375_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_394_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXX";
            break;
    }
}

}

