// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pooling4_HH_
#define _max_pooling4_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenet_wrapper_fcmdEe.h"

namespace ap_rtl {

struct max_pooling4 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_out< sc_lv<11> > c3_o_2_address0;
    sc_out< sc_logic > c3_o_2_ce0;
    sc_in< sc_lv<32> > c3_o_2_q0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pooling4(sc_module_name name);
    SC_HAS_PROCESS(max_pooling4);

    ~max_pooling4();

    sc_trace_file* mVcdFile;

    lenet_wrapper_fcmdEe<1,1,32,32,1>* lenet_wrapper_fcmdEe_x_U36;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > tmp_4_fu_179_p2;
    sc_signal< sc_lv<8> > tmp_4_reg_500;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > tmp_16_cast_fu_215_p1;
    sc_signal< sc_lv<32> > tmp_16_cast_reg_505;
    sc_signal< sc_lv<5> > c_1_fu_225_p2;
    sc_signal< sc_lv<5> > c_1_reg_513;
    sc_signal< sc_lv<10> > tmp_16_fu_252_p2;
    sc_signal< sc_lv<10> > tmp_16_reg_518;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > h_1_fu_264_p2;
    sc_signal< sc_lv<3> > h_1_reg_526;
    sc_signal< sc_lv<32> > i_cast_fu_278_p1;
    sc_signal< sc_lv<32> > i_cast_reg_531;
    sc_signal< sc_lv<1> > exitcond1_fu_258_p2;
    sc_signal< sc_lv<32> > tmp_7_cast_fu_288_p1;
    sc_signal< sc_lv<32> > tmp_7_cast_reg_536;
    sc_signal< sc_lv<9> > output_addr_reg_541;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > w_1_fu_312_p2;
    sc_signal< sc_lv<3> > w_1_reg_549;
    sc_signal< sc_lv<32> > j_cast_fu_326_p1;
    sc_signal< sc_lv<32> > j_cast_reg_554;
    sc_signal< sc_lv<1> > exitcond_fu_306_p2;
    sc_signal< sc_lv<32> > tmp_cast_fu_336_p1;
    sc_signal< sc_lv<32> > tmp_cast_reg_559;
    sc_signal< sc_lv<12> > tmp_21_fu_369_p2;
    sc_signal< sc_lv<12> > tmp_21_reg_564;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > j_1_fu_399_p2;
    sc_signal< sc_lv<32> > j_1_reg_580;
    sc_signal< sc_lv<1> > tmp_s_fu_394_p2;
    sc_signal< sc_lv<32> > i_1_fu_405_p2;
    sc_signal< sc_lv<32> > c3_o_2_load_reg_590;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > tmp_10_fu_158_p2;
    sc_signal< sc_lv<1> > tmp_10_reg_597;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > max_value_2_fu_493_p3;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<5> > c_reg_81;
    sc_signal< sc_lv<3> > h_reg_92;
    sc_signal< sc_lv<1> > exitcond2_fu_219_p2;
    sc_signal< sc_lv<3> > w_reg_103;
    sc_signal< sc_lv<1> > tmp_9_fu_375_p2;
    sc_signal< sc_lv<32> > i6_reg_114;
    sc_signal< sc_lv<32> > max_value_reg_124;
    sc_signal< sc_lv<32> > j5_reg_137;
    sc_signal< sc_lv<32> > max_value_1_reg_146;
    sc_signal< sc_lv<32> > tmp_20_cast_fu_301_p1;
    sc_signal< sc_lv<32> > tmp_25_cast_fu_389_p1;
    sc_signal< sc_lv<7> > tmp_2_fu_167_p3;
    sc_signal< sc_lv<8> > c_cast3_cast_fu_163_p1;
    sc_signal< sc_lv<8> > p_shl2_cast_fu_175_p1;
    sc_signal< sc_lv<8> > tmp_12_fu_185_p3;
    sc_signal< sc_lv<6> > tmp_13_fu_197_p3;
    sc_signal< sc_lv<9> > p_shl1_cast_fu_205_p1;
    sc_signal< sc_lv<9> > p_shl_cast_fu_193_p1;
    sc_signal< sc_lv<9> > tmp_14_fu_209_p2;
    sc_signal< sc_lv<8> > h_cast2_cast_fu_231_p1;
    sc_signal< sc_lv<8> > tmp_15_fu_235_p2;
    sc_signal< sc_lv<10> > tmp_17_cast_fu_240_p1;
    sc_signal< sc_lv<10> > p_shl3_cast_fu_244_p3;
    sc_signal< sc_lv<4> > i_fu_270_p3;
    sc_signal< sc_lv<4> > tmp_7_fu_282_p2;
    sc_signal< sc_lv<10> > w_cast1_cast_fu_292_p1;
    sc_signal< sc_lv<10> > tmp_17_fu_296_p2;
    sc_signal< sc_lv<4> > j_fu_318_p3;
    sc_signal< sc_lv<4> > tmp_fu_330_p2;
    sc_signal< sc_lv<32> > tmp_18_fu_340_p2;
    sc_signal< sc_lv<9> > tmp_19_fu_345_p1;
    sc_signal< sc_lv<11> > tmp_20_fu_357_p1;
    sc_signal< sc_lv<12> > p_shl5_cast_fu_361_p3;
    sc_signal< sc_lv<12> > p_shl4_cast_fu_349_p3;
    sc_signal< sc_lv<12> > tmp_22_fu_380_p1;
    sc_signal< sc_lv<12> > tmp_23_fu_384_p2;
    sc_signal< sc_lv<32> > max_value_1_to_int_fu_411_p1;
    sc_signal< sc_lv<32> > c3_o_2_load_to_int_fu_429_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_415_p4;
    sc_signal< sc_lv<23> > tmp_24_fu_425_p1;
    sc_signal< sc_lv<1> > notrhs_fu_452_p2;
    sc_signal< sc_lv<1> > notlhs_fu_446_p2;
    sc_signal< sc_lv<8> > tmp_3_fu_432_p4;
    sc_signal< sc_lv<23> > tmp_25_fu_442_p1;
    sc_signal< sc_lv<1> > notrhs5_fu_470_p2;
    sc_signal< sc_lv<1> > notlhs4_fu_464_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_458_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_476_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_482_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_488_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_D368D4A5;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c3_o_2_address0();
    void thread_c3_o_2_ce0();
    void thread_c3_o_2_load_to_int_fu_429_p1();
    void thread_c_1_fu_225_p2();
    void thread_c_cast3_cast_fu_163_p1();
    void thread_exitcond1_fu_258_p2();
    void thread_exitcond2_fu_219_p2();
    void thread_exitcond_fu_306_p2();
    void thread_h_1_fu_264_p2();
    void thread_h_cast2_cast_fu_231_p1();
    void thread_i_1_fu_405_p2();
    void thread_i_cast_fu_278_p1();
    void thread_i_fu_270_p3();
    void thread_j_1_fu_399_p2();
    void thread_j_cast_fu_326_p1();
    void thread_j_fu_318_p3();
    void thread_max_value_1_to_int_fu_411_p1();
    void thread_max_value_2_fu_493_p3();
    void thread_notlhs4_fu_464_p2();
    void thread_notlhs_fu_446_p2();
    void thread_notrhs5_fu_470_p2();
    void thread_notrhs_fu_452_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_205_p1();
    void thread_p_shl2_cast_fu_175_p1();
    void thread_p_shl3_cast_fu_244_p3();
    void thread_p_shl4_cast_fu_349_p3();
    void thread_p_shl5_cast_fu_361_p3();
    void thread_p_shl_cast_fu_193_p1();
    void thread_tmp_11_fu_488_p2();
    void thread_tmp_12_fu_185_p3();
    void thread_tmp_13_fu_197_p3();
    void thread_tmp_14_fu_209_p2();
    void thread_tmp_15_fu_235_p2();
    void thread_tmp_16_cast_fu_215_p1();
    void thread_tmp_16_fu_252_p2();
    void thread_tmp_17_cast_fu_240_p1();
    void thread_tmp_17_fu_296_p2();
    void thread_tmp_18_fu_340_p2();
    void thread_tmp_19_fu_345_p1();
    void thread_tmp_1_fu_415_p4();
    void thread_tmp_20_cast_fu_301_p1();
    void thread_tmp_20_fu_357_p1();
    void thread_tmp_21_fu_369_p2();
    void thread_tmp_22_fu_380_p1();
    void thread_tmp_23_fu_384_p2();
    void thread_tmp_24_fu_425_p1();
    void thread_tmp_25_cast_fu_389_p1();
    void thread_tmp_25_fu_442_p1();
    void thread_tmp_2_fu_167_p3();
    void thread_tmp_3_fu_432_p4();
    void thread_tmp_4_fu_179_p2();
    void thread_tmp_5_fu_458_p2();
    void thread_tmp_6_fu_476_p2();
    void thread_tmp_7_cast_fu_288_p1();
    void thread_tmp_7_fu_282_p2();
    void thread_tmp_8_fu_482_p2();
    void thread_tmp_9_fu_375_p2();
    void thread_tmp_cast_fu_336_p1();
    void thread_tmp_fu_330_p2();
    void thread_tmp_s_fu_394_p2();
    void thread_w_1_fu_312_p2();
    void thread_w_cast1_cast_fu_292_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
