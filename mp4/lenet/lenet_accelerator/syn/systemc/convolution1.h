// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _convolution1_HH_
#define _convolution1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenet_wrapper_fadbkb.h"
#include "lenet_wrapper_fmucud.h"

namespace ap_rtl {

struct convolution1 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > input_0_address0;
    sc_out< sc_logic > input_0_ce0;
    sc_in< sc_lv<32> > input_0_q0;
    sc_out< sc_lv<8> > conv1_w_0_address0;
    sc_out< sc_logic > conv1_w_0_ce0;
    sc_in< sc_lv<32> > conv1_w_0_q0;
    sc_out< sc_lv<3> > conv1_b_address0;
    sc_out< sc_logic > conv1_b_ce0;
    sc_in< sc_lv<32> > conv1_b_q0;
    sc_out< sc_lv<13> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    convolution1(sc_module_name name);
    SC_HAS_PROCESS(convolution1);

    ~convolution1();

    sc_trace_file* mVcdFile;

    lenet_wrapper_fadbkb<1,5,32,32,32>* lenet_wrapper_fadbkb_U21;
    lenet_wrapper_fmucud<1,4,32,32,32>* lenet_wrapper_fmucud_U22;
    sc_signal< sc_lv<23> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > tmp_191_cast_fu_233_p1;
    sc_signal< sc_lv<32> > tmp_191_cast_reg_485;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > tmp_194_cast_fu_255_p1;
    sc_signal< sc_lv<10> > tmp_194_cast_reg_490;
    sc_signal< sc_lv<3> > co_3_fu_265_p2;
    sc_signal< sc_lv<3> > co_3_reg_498;
    sc_signal< sc_lv<3> > conv1_b_addr_reg_503;
    sc_signal< sc_lv<1> > exitcond2_fu_259_p2;
    sc_signal< sc_lv<32> > i_cast2_fu_271_p1;
    sc_signal< sc_lv<32> > i_cast2_reg_508;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<14> > tmp_179_fu_308_p2;
    sc_signal< sc_lv<14> > tmp_179_reg_513;
    sc_signal< sc_lv<5> > h_fu_324_p2;
    sc_signal< sc_lv<5> > h_reg_521;
    sc_signal< sc_lv<32> > tmp_cast_fu_336_p1;
    sc_signal< sc_lv<32> > tmp_cast_reg_526;
    sc_signal< sc_lv<1> > exitcond1_fu_318_p2;
    sc_signal< sc_lv<32> > j_cast1_fu_340_p1;
    sc_signal< sc_lv<32> > j_cast1_reg_531;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<13> > output_addr_reg_536;
    sc_signal< sc_lv<5> > w_fu_368_p2;
    sc_signal< sc_lv<5> > w_reg_544;
    sc_signal< sc_lv<32> > tmp_cast_85_fu_380_p1;
    sc_signal< sc_lv<32> > tmp_cast_85_reg_549;
    sc_signal< sc_lv<1> > exitcond_fu_362_p2;
    sc_signal< sc_lv<12> > tmp_201_cast_fu_388_p3;
    sc_signal< sc_lv<12> > tmp_201_cast_reg_554;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<9> > tmp_185_fu_417_p2;
    sc_signal< sc_lv<9> > tmp_185_reg_559;
    sc_signal< sc_lv<32> > m_2_fu_428_p2;
    sc_signal< sc_lv<32> > m_2_reg_567;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > n_2_fu_467_p2;
    sc_signal< sc_lv<32> > n_2_reg_585;
    sc_signal< sc_lv<32> > j_15_fu_473_p2;
    sc_signal< sc_lv<32> > j_15_reg_590;
    sc_signal< sc_lv<1> > tmp_25_fu_462_p2;
    sc_signal< sc_lv<32> > i_20_fu_479_p2;
    sc_signal< sc_lv<32> > conv1_w_0_load_reg_600;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > input_0_load_reg_605;
    sc_signal< sc_lv<32> > grp_fu_198_p2;
    sc_signal< sc_lv<32> > tmp_26_reg_610;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > grp_fu_192_p2;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > conv1_b_load_reg_620;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<32> > tmp_24_reg_625;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<3> > co_reg_94;
    sc_signal< sc_lv<5> > i_reg_105;
    sc_signal< sc_lv<5> > j_reg_116;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<32> > i19_reg_127;
    sc_signal< sc_lv<32> > m_reg_137;
    sc_signal< sc_lv<32> > sum_reg_148;
    sc_signal< sc_lv<32> > j14_reg_160;
    sc_signal< sc_lv<1> > tmp_23_fu_423_p2;
    sc_signal< sc_lv<32> > n_reg_169;
    sc_signal< sc_lv<32> > sum_1_reg_180;
    sc_signal< sc_lv<32> > co_cast3_fu_202_p1;
    sc_signal< sc_lv<32> > tmp_199_cast_fu_353_p1;
    sc_signal< sc_lv<32> > tmp_205_cast_fu_447_p1;
    sc_signal< sc_lv<32> > tmp_206_cast_fu_457_p1;
    sc_signal< sc_lv<32> > grp_fu_192_p0;
    sc_signal< sc_lv<32> > grp_fu_192_p1;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<5> > tmp_174_fu_211_p3;
    sc_signal< sc_lv<6> > co_cast3_cast_fu_207_p1;
    sc_signal< sc_lv<6> > p_shl2_cast1_fu_219_p1;
    sc_signal< sc_lv<6> > tmp_175_fu_227_p2;
    sc_signal< sc_lv<8> > tmp_176_fu_237_p3;
    sc_signal< sc_lv<9> > p_shl_cast_fu_245_p1;
    sc_signal< sc_lv<9> > p_shl2_cast_fu_223_p1;
    sc_signal< sc_lv<9> > tmp_177_fu_249_p2;
    sc_signal< sc_lv<10> > i_cast2_cast_fu_275_p1;
    sc_signal< sc_lv<10> > tmp_178_fu_279_p2;
    sc_signal< sc_lv<9> > tmp_172_fu_284_p1;
    sc_signal< sc_lv<12> > tmp_173_fu_296_p3;
    sc_signal< sc_lv<14> > p_shl3_cast_fu_288_p3;
    sc_signal< sc_lv<14> > p_shl4_cast_fu_304_p1;
    sc_signal< sc_lv<6> > i_cast_fu_314_p1;
    sc_signal< sc_lv<6> > tmp_fu_330_p2;
    sc_signal< sc_lv<14> > j_cast1_cast_fu_344_p1;
    sc_signal< sc_lv<14> > tmp_180_fu_348_p2;
    sc_signal< sc_lv<6> > j_cast_fu_358_p1;
    sc_signal< sc_lv<6> > tmp_s_fu_374_p2;
    sc_signal< sc_lv<7> > tmp_181_fu_384_p1;
    sc_signal< sc_lv<32> > tmp_182_fu_396_p2;
    sc_signal< sc_lv<7> > tmp_184_fu_405_p1;
    sc_signal< sc_lv<9> > tmp_183_fu_401_p1;
    sc_signal< sc_lv<9> > p_shl5_cast_fu_409_p3;
    sc_signal< sc_lv<12> > tmp_186_fu_434_p1;
    sc_signal< sc_lv<12> > tmp_188_fu_442_p2;
    sc_signal< sc_lv<9> > tmp_187_fu_438_p1;
    sc_signal< sc_lv<9> > tmp_189_fu_452_p2;
    sc_signal< sc_lv<23> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<23> ap_ST_fsm_state1;
    static const sc_lv<23> ap_ST_fsm_state2;
    static const sc_lv<23> ap_ST_fsm_state3;
    static const sc_lv<23> ap_ST_fsm_state4;
    static const sc_lv<23> ap_ST_fsm_state5;
    static const sc_lv<23> ap_ST_fsm_state6;
    static const sc_lv<23> ap_ST_fsm_state7;
    static const sc_lv<23> ap_ST_fsm_state8;
    static const sc_lv<23> ap_ST_fsm_state9;
    static const sc_lv<23> ap_ST_fsm_state10;
    static const sc_lv<23> ap_ST_fsm_state11;
    static const sc_lv<23> ap_ST_fsm_state12;
    static const sc_lv<23> ap_ST_fsm_state13;
    static const sc_lv<23> ap_ST_fsm_state14;
    static const sc_lv<23> ap_ST_fsm_state15;
    static const sc_lv<23> ap_ST_fsm_state16;
    static const sc_lv<23> ap_ST_fsm_state17;
    static const sc_lv<23> ap_ST_fsm_state18;
    static const sc_lv<23> ap_ST_fsm_state19;
    static const sc_lv<23> ap_ST_fsm_state20;
    static const sc_lv<23> ap_ST_fsm_state21;
    static const sc_lv<23> ap_ST_fsm_state22;
    static const sc_lv<23> ap_ST_fsm_state23;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<6> ap_const_lv6_5;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_co_3_fu_265_p2();
    void thread_co_cast3_cast_fu_207_p1();
    void thread_co_cast3_fu_202_p1();
    void thread_conv1_b_address0();
    void thread_conv1_b_ce0();
    void thread_conv1_w_0_address0();
    void thread_conv1_w_0_ce0();
    void thread_exitcond1_fu_318_p2();
    void thread_exitcond2_fu_259_p2();
    void thread_exitcond_fu_362_p2();
    void thread_grp_fu_192_p0();
    void thread_grp_fu_192_p1();
    void thread_h_fu_324_p2();
    void thread_i_20_fu_479_p2();
    void thread_i_cast2_cast_fu_275_p1();
    void thread_i_cast2_fu_271_p1();
    void thread_i_cast_fu_314_p1();
    void thread_input_0_address0();
    void thread_input_0_ce0();
    void thread_j_15_fu_473_p2();
    void thread_j_cast1_cast_fu_344_p1();
    void thread_j_cast1_fu_340_p1();
    void thread_j_cast_fu_358_p1();
    void thread_m_2_fu_428_p2();
    void thread_n_2_fu_467_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl2_cast1_fu_219_p1();
    void thread_p_shl2_cast_fu_223_p1();
    void thread_p_shl3_cast_fu_288_p3();
    void thread_p_shl4_cast_fu_304_p1();
    void thread_p_shl5_cast_fu_409_p3();
    void thread_p_shl_cast_fu_245_p1();
    void thread_tmp_172_fu_284_p1();
    void thread_tmp_173_fu_296_p3();
    void thread_tmp_174_fu_211_p3();
    void thread_tmp_175_fu_227_p2();
    void thread_tmp_176_fu_237_p3();
    void thread_tmp_177_fu_249_p2();
    void thread_tmp_178_fu_279_p2();
    void thread_tmp_179_fu_308_p2();
    void thread_tmp_180_fu_348_p2();
    void thread_tmp_181_fu_384_p1();
    void thread_tmp_182_fu_396_p2();
    void thread_tmp_183_fu_401_p1();
    void thread_tmp_184_fu_405_p1();
    void thread_tmp_185_fu_417_p2();
    void thread_tmp_186_fu_434_p1();
    void thread_tmp_187_fu_438_p1();
    void thread_tmp_188_fu_442_p2();
    void thread_tmp_189_fu_452_p2();
    void thread_tmp_191_cast_fu_233_p1();
    void thread_tmp_194_cast_fu_255_p1();
    void thread_tmp_199_cast_fu_353_p1();
    void thread_tmp_201_cast_fu_388_p3();
    void thread_tmp_205_cast_fu_447_p1();
    void thread_tmp_206_cast_fu_457_p1();
    void thread_tmp_23_fu_423_p2();
    void thread_tmp_25_fu_462_p2();
    void thread_tmp_cast_85_fu_380_p1();
    void thread_tmp_cast_fu_336_p1();
    void thread_tmp_fu_330_p2();
    void thread_tmp_s_fu_374_p2();
    void thread_w_fu_368_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
