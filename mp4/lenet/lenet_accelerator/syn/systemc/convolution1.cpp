// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "convolution1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic convolution1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic convolution1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> convolution1::ap_ST_fsm_state1 = "1";
const sc_lv<23> convolution1::ap_ST_fsm_state2 = "10";
const sc_lv<23> convolution1::ap_ST_fsm_state3 = "100";
const sc_lv<23> convolution1::ap_ST_fsm_state4 = "1000";
const sc_lv<23> convolution1::ap_ST_fsm_state5 = "10000";
const sc_lv<23> convolution1::ap_ST_fsm_state6 = "100000";
const sc_lv<23> convolution1::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> convolution1::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> convolution1::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> convolution1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> convolution1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> convolution1::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> convolution1::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> convolution1::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> convolution1::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> convolution1::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> convolution1::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> convolution1::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> convolution1::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> convolution1::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> convolution1::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> convolution1::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> convolution1::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> convolution1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> convolution1::ap_const_lv32_1 = "1";
const sc_lv<1> convolution1::ap_const_lv1_0 = "0";
const sc_lv<32> convolution1::ap_const_lv32_2 = "10";
const sc_lv<32> convolution1::ap_const_lv32_3 = "11";
const sc_lv<32> convolution1::ap_const_lv32_4 = "100";
const sc_lv<32> convolution1::ap_const_lv32_5 = "101";
const sc_lv<1> convolution1::ap_const_lv1_1 = "1";
const sc_lv<32> convolution1::ap_const_lv32_6 = "110";
const sc_lv<32> convolution1::ap_const_lv32_A = "1010";
const sc_lv<32> convolution1::ap_const_lv32_F = "1111";
const sc_lv<32> convolution1::ap_const_lv32_10 = "10000";
const sc_lv<32> convolution1::ap_const_lv32_15 = "10101";
const sc_lv<3> convolution1::ap_const_lv3_0 = "000";
const sc_lv<5> convolution1::ap_const_lv5_0 = "00000";
const sc_lv<32> convolution1::ap_const_lv32_16 = "10110";
const sc_lv<32> convolution1::ap_const_lv32_B = "1011";
const sc_lv<32> convolution1::ap_const_lv32_11 = "10001";
const sc_lv<32> convolution1::ap_const_lv32_7 = "111";
const sc_lv<2> convolution1::ap_const_lv2_0 = "00";
const sc_lv<3> convolution1::ap_const_lv3_6 = "110";
const sc_lv<3> convolution1::ap_const_lv3_1 = "1";
const sc_lv<5> convolution1::ap_const_lv5_1C = "11100";
const sc_lv<5> convolution1::ap_const_lv5_1 = "1";
const sc_lv<6> convolution1::ap_const_lv6_5 = "101";
const bool convolution1::ap_const_boolean_1 = true;

convolution1::convolution1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lenet_wrapper_fadbkb_U21 = new lenet_wrapper_fadbkb<1,5,32,32,32>("lenet_wrapper_fadbkb_U21");
    lenet_wrapper_fadbkb_U21->clk(ap_clk);
    lenet_wrapper_fadbkb_U21->reset(ap_rst);
    lenet_wrapper_fadbkb_U21->din0(grp_fu_192_p0);
    lenet_wrapper_fadbkb_U21->din1(grp_fu_192_p1);
    lenet_wrapper_fadbkb_U21->ce(ap_var_for_const0);
    lenet_wrapper_fadbkb_U21->dout(grp_fu_192_p2);
    lenet_wrapper_fmucud_U22 = new lenet_wrapper_fmucud<1,4,32,32,32>("lenet_wrapper_fmucud_U22");
    lenet_wrapper_fmucud_U22->clk(ap_clk);
    lenet_wrapper_fmucud_U22->reset(ap_rst);
    lenet_wrapper_fmucud_U22->din0(conv1_w_0_load_reg_600);
    lenet_wrapper_fmucud_U22->din1(input_0_load_reg_605);
    lenet_wrapper_fmucud_U22->ce(ap_var_for_const0);
    lenet_wrapper_fmucud_U22->dout(grp_fu_198_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_259_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_259_p2 );

    SC_METHOD(thread_co_3_fu_265_p2);
    sensitive << ( co_reg_94 );

    SC_METHOD(thread_co_cast3_cast_fu_207_p1);
    sensitive << ( co_reg_94 );

    SC_METHOD(thread_co_cast3_fu_202_p1);
    sensitive << ( co_reg_94 );

    SC_METHOD(thread_conv1_b_address0);
    sensitive << ( conv1_b_addr_reg_503 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_conv1_b_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_conv1_w_0_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_206_cast_fu_457_p1 );

    SC_METHOD(thread_conv1_w_0_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_exitcond1_fu_318_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_105 );

    SC_METHOD(thread_exitcond2_fu_259_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_reg_94 );

    SC_METHOD(thread_exitcond_fu_362_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_reg_116 );

    SC_METHOD(thread_grp_fu_192_p0);
    sensitive << ( sum_reg_148 );
    sensitive << ( sum_1_reg_180 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_192_p1);
    sensitive << ( tmp_26_reg_610 );
    sensitive << ( conv1_b_load_reg_620 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_h_fu_324_p2);
    sensitive << ( i_reg_105 );

    SC_METHOD(thread_i_20_fu_479_p2);
    sensitive << ( i19_reg_127 );

    SC_METHOD(thread_i_cast2_cast_fu_275_p1);
    sensitive << ( i_reg_105 );

    SC_METHOD(thread_i_cast2_fu_271_p1);
    sensitive << ( i_reg_105 );

    SC_METHOD(thread_i_cast_fu_314_p1);
    sensitive << ( i_reg_105 );

    SC_METHOD(thread_input_0_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_205_cast_fu_447_p1 );

    SC_METHOD(thread_input_0_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_j_15_fu_473_p2);
    sensitive << ( j14_reg_160 );

    SC_METHOD(thread_j_cast1_cast_fu_344_p1);
    sensitive << ( j_reg_116 );

    SC_METHOD(thread_j_cast1_fu_340_p1);
    sensitive << ( j_reg_116 );

    SC_METHOD(thread_j_cast_fu_358_p1);
    sensitive << ( j_reg_116 );

    SC_METHOD(thread_m_2_fu_428_p2);
    sensitive << ( m_reg_137 );

    SC_METHOD(thread_n_2_fu_467_p2);
    sensitive << ( n_reg_169 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( output_addr_reg_536 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( tmp_24_reg_625 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_p_shl2_cast1_fu_219_p1);
    sensitive << ( tmp_174_fu_211_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_223_p1);
    sensitive << ( tmp_174_fu_211_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_288_p3);
    sensitive << ( tmp_172_fu_284_p1 );

    SC_METHOD(thread_p_shl4_cast_fu_304_p1);
    sensitive << ( tmp_173_fu_296_p3 );

    SC_METHOD(thread_p_shl5_cast_fu_409_p3);
    sensitive << ( tmp_184_fu_405_p1 );

    SC_METHOD(thread_p_shl_cast_fu_245_p1);
    sensitive << ( tmp_176_fu_237_p3 );

    SC_METHOD(thread_tmp_172_fu_284_p1);
    sensitive << ( tmp_178_fu_279_p2 );

    SC_METHOD(thread_tmp_173_fu_296_p3);
    sensitive << ( tmp_178_fu_279_p2 );

    SC_METHOD(thread_tmp_174_fu_211_p3);
    sensitive << ( co_reg_94 );

    SC_METHOD(thread_tmp_175_fu_227_p2);
    sensitive << ( co_cast3_cast_fu_207_p1 );
    sensitive << ( p_shl2_cast1_fu_219_p1 );

    SC_METHOD(thread_tmp_176_fu_237_p3);
    sensitive << ( co_reg_94 );

    SC_METHOD(thread_tmp_177_fu_249_p2);
    sensitive << ( p_shl_cast_fu_245_p1 );
    sensitive << ( p_shl2_cast_fu_223_p1 );

    SC_METHOD(thread_tmp_178_fu_279_p2);
    sensitive << ( tmp_194_cast_reg_490 );
    sensitive << ( i_cast2_cast_fu_275_p1 );

    SC_METHOD(thread_tmp_179_fu_308_p2);
    sensitive << ( p_shl3_cast_fu_288_p3 );
    sensitive << ( p_shl4_cast_fu_304_p1 );

    SC_METHOD(thread_tmp_180_fu_348_p2);
    sensitive << ( tmp_179_reg_513 );
    sensitive << ( j_cast1_cast_fu_344_p1 );

    SC_METHOD(thread_tmp_181_fu_384_p1);
    sensitive << ( i19_reg_127 );

    SC_METHOD(thread_tmp_182_fu_396_p2);
    sensitive << ( tmp_191_cast_reg_485 );
    sensitive << ( m_reg_137 );

    SC_METHOD(thread_tmp_183_fu_401_p1);
    sensitive << ( tmp_182_fu_396_p2 );

    SC_METHOD(thread_tmp_184_fu_405_p1);
    sensitive << ( tmp_182_fu_396_p2 );

    SC_METHOD(thread_tmp_185_fu_417_p2);
    sensitive << ( tmp_183_fu_401_p1 );
    sensitive << ( p_shl5_cast_fu_409_p3 );

    SC_METHOD(thread_tmp_186_fu_434_p1);
    sensitive << ( j14_reg_160 );

    SC_METHOD(thread_tmp_187_fu_438_p1);
    sensitive << ( n_reg_169 );

    SC_METHOD(thread_tmp_188_fu_442_p2);
    sensitive << ( tmp_201_cast_reg_554 );
    sensitive << ( tmp_186_fu_434_p1 );

    SC_METHOD(thread_tmp_189_fu_452_p2);
    sensitive << ( tmp_185_reg_559 );
    sensitive << ( tmp_187_fu_438_p1 );

    SC_METHOD(thread_tmp_191_cast_fu_233_p1);
    sensitive << ( tmp_175_fu_227_p2 );

    SC_METHOD(thread_tmp_194_cast_fu_255_p1);
    sensitive << ( tmp_177_fu_249_p2 );

    SC_METHOD(thread_tmp_199_cast_fu_353_p1);
    sensitive << ( tmp_180_fu_348_p2 );

    SC_METHOD(thread_tmp_201_cast_fu_388_p3);
    sensitive << ( tmp_181_fu_384_p1 );

    SC_METHOD(thread_tmp_205_cast_fu_447_p1);
    sensitive << ( tmp_188_fu_442_p2 );

    SC_METHOD(thread_tmp_206_cast_fu_457_p1);
    sensitive << ( tmp_189_fu_452_p2 );

    SC_METHOD(thread_tmp_23_fu_423_p2);
    sensitive << ( tmp_cast_reg_526 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i19_reg_127 );

    SC_METHOD(thread_tmp_25_fu_462_p2);
    sensitive << ( tmp_cast_85_reg_549 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j14_reg_160 );

    SC_METHOD(thread_tmp_cast_85_fu_380_p1);
    sensitive << ( tmp_s_fu_374_p2 );

    SC_METHOD(thread_tmp_cast_fu_336_p1);
    sensitive << ( tmp_fu_330_p2 );

    SC_METHOD(thread_tmp_fu_330_p2);
    sensitive << ( i_cast_fu_314_p1 );

    SC_METHOD(thread_tmp_s_fu_374_p2);
    sensitive << ( j_cast_fu_358_p1 );

    SC_METHOD(thread_w_fu_368_p2);
    sensitive << ( j_reg_116 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_259_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond1_fu_318_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_362_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_25_fu_462_p2 );
    sensitive << ( tmp_23_fu_423_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "convolution1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_0_address0, "(port)input_0_address0");
    sc_trace(mVcdFile, input_0_ce0, "(port)input_0_ce0");
    sc_trace(mVcdFile, input_0_q0, "(port)input_0_q0");
    sc_trace(mVcdFile, conv1_w_0_address0, "(port)conv1_w_0_address0");
    sc_trace(mVcdFile, conv1_w_0_ce0, "(port)conv1_w_0_ce0");
    sc_trace(mVcdFile, conv1_w_0_q0, "(port)conv1_w_0_q0");
    sc_trace(mVcdFile, conv1_b_address0, "(port)conv1_b_address0");
    sc_trace(mVcdFile, conv1_b_ce0, "(port)conv1_b_ce0");
    sc_trace(mVcdFile, conv1_b_q0, "(port)conv1_b_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_191_cast_fu_233_p1, "tmp_191_cast_fu_233_p1");
    sc_trace(mVcdFile, tmp_191_cast_reg_485, "tmp_191_cast_reg_485");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_194_cast_fu_255_p1, "tmp_194_cast_fu_255_p1");
    sc_trace(mVcdFile, tmp_194_cast_reg_490, "tmp_194_cast_reg_490");
    sc_trace(mVcdFile, co_3_fu_265_p2, "co_3_fu_265_p2");
    sc_trace(mVcdFile, co_3_reg_498, "co_3_reg_498");
    sc_trace(mVcdFile, conv1_b_addr_reg_503, "conv1_b_addr_reg_503");
    sc_trace(mVcdFile, exitcond2_fu_259_p2, "exitcond2_fu_259_p2");
    sc_trace(mVcdFile, i_cast2_fu_271_p1, "i_cast2_fu_271_p1");
    sc_trace(mVcdFile, i_cast2_reg_508, "i_cast2_reg_508");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_179_fu_308_p2, "tmp_179_fu_308_p2");
    sc_trace(mVcdFile, tmp_179_reg_513, "tmp_179_reg_513");
    sc_trace(mVcdFile, h_fu_324_p2, "h_fu_324_p2");
    sc_trace(mVcdFile, h_reg_521, "h_reg_521");
    sc_trace(mVcdFile, tmp_cast_fu_336_p1, "tmp_cast_fu_336_p1");
    sc_trace(mVcdFile, tmp_cast_reg_526, "tmp_cast_reg_526");
    sc_trace(mVcdFile, exitcond1_fu_318_p2, "exitcond1_fu_318_p2");
    sc_trace(mVcdFile, j_cast1_fu_340_p1, "j_cast1_fu_340_p1");
    sc_trace(mVcdFile, j_cast1_reg_531, "j_cast1_reg_531");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, output_addr_reg_536, "output_addr_reg_536");
    sc_trace(mVcdFile, w_fu_368_p2, "w_fu_368_p2");
    sc_trace(mVcdFile, w_reg_544, "w_reg_544");
    sc_trace(mVcdFile, tmp_cast_85_fu_380_p1, "tmp_cast_85_fu_380_p1");
    sc_trace(mVcdFile, tmp_cast_85_reg_549, "tmp_cast_85_reg_549");
    sc_trace(mVcdFile, exitcond_fu_362_p2, "exitcond_fu_362_p2");
    sc_trace(mVcdFile, tmp_201_cast_fu_388_p3, "tmp_201_cast_fu_388_p3");
    sc_trace(mVcdFile, tmp_201_cast_reg_554, "tmp_201_cast_reg_554");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_185_fu_417_p2, "tmp_185_fu_417_p2");
    sc_trace(mVcdFile, tmp_185_reg_559, "tmp_185_reg_559");
    sc_trace(mVcdFile, m_2_fu_428_p2, "m_2_fu_428_p2");
    sc_trace(mVcdFile, m_2_reg_567, "m_2_reg_567");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, n_2_fu_467_p2, "n_2_fu_467_p2");
    sc_trace(mVcdFile, n_2_reg_585, "n_2_reg_585");
    sc_trace(mVcdFile, j_15_fu_473_p2, "j_15_fu_473_p2");
    sc_trace(mVcdFile, j_15_reg_590, "j_15_reg_590");
    sc_trace(mVcdFile, tmp_25_fu_462_p2, "tmp_25_fu_462_p2");
    sc_trace(mVcdFile, i_20_fu_479_p2, "i_20_fu_479_p2");
    sc_trace(mVcdFile, conv1_w_0_load_reg_600, "conv1_w_0_load_reg_600");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, input_0_load_reg_605, "input_0_load_reg_605");
    sc_trace(mVcdFile, grp_fu_198_p2, "grp_fu_198_p2");
    sc_trace(mVcdFile, tmp_26_reg_610, "tmp_26_reg_610");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_192_p2, "grp_fu_192_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, conv1_b_load_reg_620, "conv1_b_load_reg_620");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_24_reg_625, "tmp_24_reg_625");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, co_reg_94, "co_reg_94");
    sc_trace(mVcdFile, i_reg_105, "i_reg_105");
    sc_trace(mVcdFile, j_reg_116, "j_reg_116");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, i19_reg_127, "i19_reg_127");
    sc_trace(mVcdFile, m_reg_137, "m_reg_137");
    sc_trace(mVcdFile, sum_reg_148, "sum_reg_148");
    sc_trace(mVcdFile, j14_reg_160, "j14_reg_160");
    sc_trace(mVcdFile, tmp_23_fu_423_p2, "tmp_23_fu_423_p2");
    sc_trace(mVcdFile, n_reg_169, "n_reg_169");
    sc_trace(mVcdFile, sum_1_reg_180, "sum_1_reg_180");
    sc_trace(mVcdFile, co_cast3_fu_202_p1, "co_cast3_fu_202_p1");
    sc_trace(mVcdFile, tmp_199_cast_fu_353_p1, "tmp_199_cast_fu_353_p1");
    sc_trace(mVcdFile, tmp_205_cast_fu_447_p1, "tmp_205_cast_fu_447_p1");
    sc_trace(mVcdFile, tmp_206_cast_fu_457_p1, "tmp_206_cast_fu_457_p1");
    sc_trace(mVcdFile, grp_fu_192_p0, "grp_fu_192_p0");
    sc_trace(mVcdFile, grp_fu_192_p1, "grp_fu_192_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_174_fu_211_p3, "tmp_174_fu_211_p3");
    sc_trace(mVcdFile, co_cast3_cast_fu_207_p1, "co_cast3_cast_fu_207_p1");
    sc_trace(mVcdFile, p_shl2_cast1_fu_219_p1, "p_shl2_cast1_fu_219_p1");
    sc_trace(mVcdFile, tmp_175_fu_227_p2, "tmp_175_fu_227_p2");
    sc_trace(mVcdFile, tmp_176_fu_237_p3, "tmp_176_fu_237_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_245_p1, "p_shl_cast_fu_245_p1");
    sc_trace(mVcdFile, p_shl2_cast_fu_223_p1, "p_shl2_cast_fu_223_p1");
    sc_trace(mVcdFile, tmp_177_fu_249_p2, "tmp_177_fu_249_p2");
    sc_trace(mVcdFile, i_cast2_cast_fu_275_p1, "i_cast2_cast_fu_275_p1");
    sc_trace(mVcdFile, tmp_178_fu_279_p2, "tmp_178_fu_279_p2");
    sc_trace(mVcdFile, tmp_172_fu_284_p1, "tmp_172_fu_284_p1");
    sc_trace(mVcdFile, tmp_173_fu_296_p3, "tmp_173_fu_296_p3");
    sc_trace(mVcdFile, p_shl3_cast_fu_288_p3, "p_shl3_cast_fu_288_p3");
    sc_trace(mVcdFile, p_shl4_cast_fu_304_p1, "p_shl4_cast_fu_304_p1");
    sc_trace(mVcdFile, i_cast_fu_314_p1, "i_cast_fu_314_p1");
    sc_trace(mVcdFile, tmp_fu_330_p2, "tmp_fu_330_p2");
    sc_trace(mVcdFile, j_cast1_cast_fu_344_p1, "j_cast1_cast_fu_344_p1");
    sc_trace(mVcdFile, tmp_180_fu_348_p2, "tmp_180_fu_348_p2");
    sc_trace(mVcdFile, j_cast_fu_358_p1, "j_cast_fu_358_p1");
    sc_trace(mVcdFile, tmp_s_fu_374_p2, "tmp_s_fu_374_p2");
    sc_trace(mVcdFile, tmp_181_fu_384_p1, "tmp_181_fu_384_p1");
    sc_trace(mVcdFile, tmp_182_fu_396_p2, "tmp_182_fu_396_p2");
    sc_trace(mVcdFile, tmp_184_fu_405_p1, "tmp_184_fu_405_p1");
    sc_trace(mVcdFile, tmp_183_fu_401_p1, "tmp_183_fu_401_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_409_p3, "p_shl5_cast_fu_409_p3");
    sc_trace(mVcdFile, tmp_186_fu_434_p1, "tmp_186_fu_434_p1");
    sc_trace(mVcdFile, tmp_188_fu_442_p2, "tmp_188_fu_442_p2");
    sc_trace(mVcdFile, tmp_187_fu_438_p1, "tmp_187_fu_438_p1");
    sc_trace(mVcdFile, tmp_189_fu_452_p2, "tmp_189_fu_452_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

convolution1::~convolution1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lenet_wrapper_fadbkb_U21;
    delete lenet_wrapper_fmucud_U22;
}

void convolution1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void convolution1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_318_p2.read(), ap_const_lv1_1))) {
        co_reg_94 = co_3_reg_498.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_reg_94 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_362_p2.read()))) {
        i19_reg_127 = i_cast2_reg_508.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_25_fu_462_p2.read()))) {
        i19_reg_127 = i_20_fu_479_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_362_p2.read(), ap_const_lv1_1))) {
        i_reg_105 = h_reg_521.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_259_p2.read(), ap_const_lv1_0))) {
        i_reg_105 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_423_p2.read()))) {
        j14_reg_160 = j_cast1_reg_531.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        j14_reg_160 = j_15_reg_590.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_318_p2.read()))) {
        j_reg_116 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        j_reg_116 = w_reg_544.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_362_p2.read()))) {
        m_reg_137 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_25_fu_462_p2.read()))) {
        m_reg_137 = m_2_reg_567.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_423_p2.read()))) {
        n_reg_169 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        n_reg_169 = n_2_reg_585.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_423_p2.read()))) {
        sum_1_reg_180 = sum_reg_148.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        sum_1_reg_180 = grp_fu_192_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_362_p2.read()))) {
        sum_reg_148 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_25_fu_462_p2.read()))) {
        sum_reg_148 = sum_1_reg_180.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_3_reg_498 = co_3_fu_265_p2.read();
        tmp_191_cast_reg_485 = tmp_191_cast_fu_233_p1.read();
        tmp_194_cast_reg_490 = tmp_194_cast_fu_255_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond2_fu_259_p2.read(), ap_const_lv1_0))) {
        conv1_b_addr_reg_503 =  (sc_lv<3>) (co_cast3_fu_202_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        conv1_b_load_reg_620 = conv1_b_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        conv1_w_0_load_reg_600 = conv1_w_0_q0.read();
        input_0_load_reg_605 = input_0_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        h_reg_521 = h_fu_324_p2.read();
        i_cast2_reg_508 = i_cast2_fu_271_p1.read();
        tmp_179_reg_513 = tmp_179_fu_308_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(tmp_25_fu_462_p2.read(), ap_const_lv1_1))) {
        j_15_reg_590 = j_15_fu_473_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_cast1_reg_531 = j_cast1_fu_340_p1.read();
        output_addr_reg_536 =  (sc_lv<13>) (tmp_199_cast_fu_353_p1.read());
        w_reg_544 = w_fu_368_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_2_reg_567 = m_2_fu_428_p2.read();
        tmp_185_reg_559 = tmp_185_fu_417_p2.read();
        tmp_201_cast_reg_554 = tmp_201_cast_fu_388_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        n_2_reg_585 = n_2_fu_467_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_24_reg_625 = grp_fu_192_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_26_reg_610 = grp_fu_198_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_362_p2.read()))) {
        tmp_cast_85_reg_549 = tmp_cast_85_fu_380_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_318_p2.read()))) {
        tmp_cast_reg_526 = tmp_cast_fu_336_p1.read();
    }
}

void convolution1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void convolution1::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void convolution1::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void convolution1::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void convolution1::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void convolution1::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void convolution1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void convolution1::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void convolution1::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void convolution1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void convolution1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void convolution1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void convolution1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void convolution1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void convolution1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void convolution1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond2_fu_259_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void convolution1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void convolution1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_259_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void convolution1::thread_co_3_fu_265_p2() {
    co_3_fu_265_p2 = (!co_reg_94.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(co_reg_94.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void convolution1::thread_co_cast3_cast_fu_207_p1() {
    co_cast3_cast_fu_207_p1 = esl_zext<6,3>(co_reg_94.read());
}

void convolution1::thread_co_cast3_fu_202_p1() {
    co_cast3_fu_202_p1 = esl_zext<32,3>(co_reg_94.read());
}

void convolution1::thread_conv1_b_address0() {
    conv1_b_address0 = conv1_b_addr_reg_503.read();
}

void convolution1::thread_conv1_b_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        conv1_b_ce0 = ap_const_logic_1;
    } else {
        conv1_b_ce0 = ap_const_logic_0;
    }
}

void convolution1::thread_conv1_w_0_address0() {
    conv1_w_0_address0 =  (sc_lv<8>) (tmp_206_cast_fu_457_p1.read());
}

void convolution1::thread_conv1_w_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        conv1_w_0_ce0 = ap_const_logic_1;
    } else {
        conv1_w_0_ce0 = ap_const_logic_0;
    }
}

void convolution1::thread_exitcond1_fu_318_p2() {
    exitcond1_fu_318_p2 = (!i_reg_105.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_105.read() == ap_const_lv5_1C);
}

void convolution1::thread_exitcond2_fu_259_p2() {
    exitcond2_fu_259_p2 = (!co_reg_94.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(co_reg_94.read() == ap_const_lv3_6);
}

void convolution1::thread_exitcond_fu_362_p2() {
    exitcond_fu_362_p2 = (!j_reg_116.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_116.read() == ap_const_lv5_1C);
}

void convolution1::thread_grp_fu_192_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_192_p0 = sum_reg_148.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_192_p0 = sum_1_reg_180.read();
    } else {
        grp_fu_192_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void convolution1::thread_grp_fu_192_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_192_p1 = conv1_b_load_reg_620.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_192_p1 = tmp_26_reg_610.read();
    } else {
        grp_fu_192_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void convolution1::thread_h_fu_324_p2() {
    h_fu_324_p2 = (!ap_const_lv5_1.is_01() || !i_reg_105.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(i_reg_105.read()));
}

void convolution1::thread_i_20_fu_479_p2() {
    i_20_fu_479_p2 = (!i19_reg_127.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i19_reg_127.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void convolution1::thread_i_cast2_cast_fu_275_p1() {
    i_cast2_cast_fu_275_p1 = esl_zext<10,5>(i_reg_105.read());
}

void convolution1::thread_i_cast2_fu_271_p1() {
    i_cast2_fu_271_p1 = esl_zext<32,5>(i_reg_105.read());
}

void convolution1::thread_i_cast_fu_314_p1() {
    i_cast_fu_314_p1 = esl_zext<6,5>(i_reg_105.read());
}

void convolution1::thread_input_0_address0() {
    input_0_address0 =  (sc_lv<10>) (tmp_205_cast_fu_447_p1.read());
}

void convolution1::thread_input_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_0_ce0 = ap_const_logic_1;
    } else {
        input_0_ce0 = ap_const_logic_0;
    }
}

void convolution1::thread_j_15_fu_473_p2() {
    j_15_fu_473_p2 = (!j14_reg_160.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(j14_reg_160.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void convolution1::thread_j_cast1_cast_fu_344_p1() {
    j_cast1_cast_fu_344_p1 = esl_zext<14,5>(j_reg_116.read());
}

void convolution1::thread_j_cast1_fu_340_p1() {
    j_cast1_fu_340_p1 = esl_zext<32,5>(j_reg_116.read());
}

void convolution1::thread_j_cast_fu_358_p1() {
    j_cast_fu_358_p1 = esl_zext<6,5>(j_reg_116.read());
}

void convolution1::thread_m_2_fu_428_p2() {
    m_2_fu_428_p2 = (!ap_const_lv32_1.is_01() || !m_reg_137.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(m_reg_137.read()));
}

void convolution1::thread_n_2_fu_467_p2() {
    n_2_fu_467_p2 = (!ap_const_lv32_1.is_01() || !n_reg_169.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(n_reg_169.read()));
}

void convolution1::thread_output_r_address0() {
    output_r_address0 = output_addr_reg_536.read();
}

void convolution1::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void convolution1::thread_output_r_d0() {
    output_r_d0 = tmp_24_reg_625.read();
}

void convolution1::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void convolution1::thread_p_shl2_cast1_fu_219_p1() {
    p_shl2_cast1_fu_219_p1 = esl_zext<6,5>(tmp_174_fu_211_p3.read());
}

void convolution1::thread_p_shl2_cast_fu_223_p1() {
    p_shl2_cast_fu_223_p1 = esl_zext<9,5>(tmp_174_fu_211_p3.read());
}

void convolution1::thread_p_shl3_cast_fu_288_p3() {
    p_shl3_cast_fu_288_p3 = esl_concat<9,5>(tmp_172_fu_284_p1.read(), ap_const_lv5_0);
}

void convolution1::thread_p_shl4_cast_fu_304_p1() {
    p_shl4_cast_fu_304_p1 = esl_sext<14,12>(tmp_173_fu_296_p3.read());
}

void convolution1::thread_p_shl5_cast_fu_409_p3() {
    p_shl5_cast_fu_409_p3 = esl_concat<7,2>(tmp_184_fu_405_p1.read(), ap_const_lv2_0);
}

void convolution1::thread_p_shl_cast_fu_245_p1() {
    p_shl_cast_fu_245_p1 = esl_zext<9,8>(tmp_176_fu_237_p3.read());
}

void convolution1::thread_tmp_172_fu_284_p1() {
    tmp_172_fu_284_p1 = tmp_178_fu_279_p2.read().range(9-1, 0);
}

void convolution1::thread_tmp_173_fu_296_p3() {
    tmp_173_fu_296_p3 = esl_concat<10,2>(tmp_178_fu_279_p2.read(), ap_const_lv2_0);
}

void convolution1::thread_tmp_174_fu_211_p3() {
    tmp_174_fu_211_p3 = esl_concat<3,2>(co_reg_94.read(), ap_const_lv2_0);
}

void convolution1::thread_tmp_175_fu_227_p2() {
    tmp_175_fu_227_p2 = (!co_cast3_cast_fu_207_p1.read().is_01() || !p_shl2_cast1_fu_219_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(co_cast3_cast_fu_207_p1.read()) + sc_biguint<6>(p_shl2_cast1_fu_219_p1.read()));
}

void convolution1::thread_tmp_176_fu_237_p3() {
    tmp_176_fu_237_p3 = esl_concat<3,5>(co_reg_94.read(), ap_const_lv5_0);
}

void convolution1::thread_tmp_177_fu_249_p2() {
    tmp_177_fu_249_p2 = (!p_shl_cast_fu_245_p1.read().is_01() || !p_shl2_cast_fu_223_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_shl_cast_fu_245_p1.read()) - sc_biguint<9>(p_shl2_cast_fu_223_p1.read()));
}

void convolution1::thread_tmp_178_fu_279_p2() {
    tmp_178_fu_279_p2 = (!tmp_194_cast_reg_490.read().is_01() || !i_cast2_cast_fu_275_p1.read().is_01())? sc_lv<10>(): (sc_bigint<10>(tmp_194_cast_reg_490.read()) + sc_biguint<10>(i_cast2_cast_fu_275_p1.read()));
}

void convolution1::thread_tmp_179_fu_308_p2() {
    tmp_179_fu_308_p2 = (!p_shl3_cast_fu_288_p3.read().is_01() || !p_shl4_cast_fu_304_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl3_cast_fu_288_p3.read()) - sc_bigint<14>(p_shl4_cast_fu_304_p1.read()));
}

void convolution1::thread_tmp_180_fu_348_p2() {
    tmp_180_fu_348_p2 = (!tmp_179_reg_513.read().is_01() || !j_cast1_cast_fu_344_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_179_reg_513.read()) + sc_biguint<14>(j_cast1_cast_fu_344_p1.read()));
}

void convolution1::thread_tmp_181_fu_384_p1() {
    tmp_181_fu_384_p1 = i19_reg_127.read().range(7-1, 0);
}

void convolution1::thread_tmp_182_fu_396_p2() {
    tmp_182_fu_396_p2 = (!tmp_191_cast_reg_485.read().is_01() || !m_reg_137.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_191_cast_reg_485.read()) + sc_biguint<32>(m_reg_137.read()));
}

void convolution1::thread_tmp_183_fu_401_p1() {
    tmp_183_fu_401_p1 = tmp_182_fu_396_p2.read().range(9-1, 0);
}

void convolution1::thread_tmp_184_fu_405_p1() {
    tmp_184_fu_405_p1 = tmp_182_fu_396_p2.read().range(7-1, 0);
}

void convolution1::thread_tmp_185_fu_417_p2() {
    tmp_185_fu_417_p2 = (!tmp_183_fu_401_p1.read().is_01() || !p_shl5_cast_fu_409_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_183_fu_401_p1.read()) + sc_biguint<9>(p_shl5_cast_fu_409_p3.read()));
}

void convolution1::thread_tmp_186_fu_434_p1() {
    tmp_186_fu_434_p1 = j14_reg_160.read().range(12-1, 0);
}

void convolution1::thread_tmp_187_fu_438_p1() {
    tmp_187_fu_438_p1 = n_reg_169.read().range(9-1, 0);
}

void convolution1::thread_tmp_188_fu_442_p2() {
    tmp_188_fu_442_p2 = (!tmp_186_fu_434_p1.read().is_01() || !tmp_201_cast_reg_554.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_186_fu_434_p1.read()) + sc_biguint<12>(tmp_201_cast_reg_554.read()));
}

void convolution1::thread_tmp_189_fu_452_p2() {
    tmp_189_fu_452_p2 = (!tmp_187_fu_438_p1.read().is_01() || !tmp_185_reg_559.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_187_fu_438_p1.read()) + sc_biguint<9>(tmp_185_reg_559.read()));
}

void convolution1::thread_tmp_191_cast_fu_233_p1() {
    tmp_191_cast_fu_233_p1 = esl_zext<32,6>(tmp_175_fu_227_p2.read());
}

void convolution1::thread_tmp_194_cast_fu_255_p1() {
    tmp_194_cast_fu_255_p1 = esl_sext<10,9>(tmp_177_fu_249_p2.read());
}

void convolution1::thread_tmp_199_cast_fu_353_p1() {
    tmp_199_cast_fu_353_p1 = esl_zext<32,14>(tmp_180_fu_348_p2.read());
}

void convolution1::thread_tmp_201_cast_fu_388_p3() {
    tmp_201_cast_fu_388_p3 = esl_concat<7,5>(tmp_181_fu_384_p1.read(), ap_const_lv5_0);
}

void convolution1::thread_tmp_205_cast_fu_447_p1() {
    tmp_205_cast_fu_447_p1 = esl_zext<32,12>(tmp_188_fu_442_p2.read());
}

void convolution1::thread_tmp_206_cast_fu_457_p1() {
    tmp_206_cast_fu_457_p1 = esl_zext<32,9>(tmp_189_fu_452_p2.read());
}

void convolution1::thread_tmp_23_fu_423_p2() {
    tmp_23_fu_423_p2 = (!i19_reg_127.read().is_01() || !tmp_cast_reg_526.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i19_reg_127.read()) < sc_bigint<32>(tmp_cast_reg_526.read()));
}

void convolution1::thread_tmp_25_fu_462_p2() {
    tmp_25_fu_462_p2 = (!j14_reg_160.read().is_01() || !tmp_cast_85_reg_549.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j14_reg_160.read()) < sc_bigint<32>(tmp_cast_85_reg_549.read()));
}

void convolution1::thread_tmp_cast_85_fu_380_p1() {
    tmp_cast_85_fu_380_p1 = esl_zext<32,6>(tmp_s_fu_374_p2.read());
}

void convolution1::thread_tmp_cast_fu_336_p1() {
    tmp_cast_fu_336_p1 = esl_zext<32,6>(tmp_fu_330_p2.read());
}

void convolution1::thread_tmp_fu_330_p2() {
    tmp_fu_330_p2 = (!i_cast_fu_314_p1.read().is_01() || !ap_const_lv6_5.is_01())? sc_lv<6>(): (sc_biguint<6>(i_cast_fu_314_p1.read()) + sc_biguint<6>(ap_const_lv6_5));
}

void convolution1::thread_tmp_s_fu_374_p2() {
    tmp_s_fu_374_p2 = (!j_cast_fu_358_p1.read().is_01() || !ap_const_lv6_5.is_01())? sc_lv<6>(): (sc_biguint<6>(j_cast_fu_358_p1.read()) + sc_biguint<6>(ap_const_lv6_5));
}

void convolution1::thread_w_fu_368_p2() {
    w_fu_368_p2 = (!j_reg_116.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_reg_116.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void convolution1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond2_fu_259_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond1_fu_318_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond_fu_362_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_423_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_25_fu_462_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

