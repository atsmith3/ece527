// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "convolution5.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic convolution5::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic convolution5::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> convolution5::ap_ST_fsm_state1 = "1";
const sc_lv<23> convolution5::ap_ST_fsm_state2 = "10";
const sc_lv<23> convolution5::ap_ST_fsm_state3 = "100";
const sc_lv<23> convolution5::ap_ST_fsm_state4 = "1000";
const sc_lv<23> convolution5::ap_ST_fsm_state5 = "10000";
const sc_lv<23> convolution5::ap_ST_fsm_state6 = "100000";
const sc_lv<23> convolution5::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> convolution5::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> convolution5::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> convolution5::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> convolution5::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> convolution5::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> convolution5::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> convolution5::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> convolution5::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> convolution5::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> convolution5::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> convolution5::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> convolution5::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> convolution5::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> convolution5::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> convolution5::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> convolution5::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> convolution5::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> convolution5::ap_const_lv32_1 = "1";
const sc_lv<32> convolution5::ap_const_lv32_2 = "10";
const sc_lv<1> convolution5::ap_const_lv1_1 = "1";
const sc_lv<32> convolution5::ap_const_lv32_3 = "11";
const sc_lv<32> convolution5::ap_const_lv32_4 = "100";
const sc_lv<32> convolution5::ap_const_lv32_5 = "101";
const sc_lv<32> convolution5::ap_const_lv32_6 = "110";
const sc_lv<32> convolution5::ap_const_lv32_A = "1010";
const sc_lv<32> convolution5::ap_const_lv32_F = "1111";
const sc_lv<32> convolution5::ap_const_lv32_10 = "10000";
const sc_lv<32> convolution5::ap_const_lv32_15 = "10101";
const sc_lv<7> convolution5::ap_const_lv7_0 = "0000000";
const sc_lv<32> convolution5::ap_const_lv32_16 = "10110";
const sc_lv<3> convolution5::ap_const_lv3_0 = "000";
const sc_lv<1> convolution5::ap_const_lv1_0 = "0";
const sc_lv<5> convolution5::ap_const_lv5_0 = "00000";
const sc_lv<32> convolution5::ap_const_lv32_B = "1011";
const sc_lv<32> convolution5::ap_const_lv32_11 = "10001";
const sc_lv<32> convolution5::ap_const_lv32_7 = "111";
const sc_lv<4> convolution5::ap_const_lv4_0 = "0000";
const sc_lv<7> convolution5::ap_const_lv7_78 = "1111000";
const sc_lv<7> convolution5::ap_const_lv7_1 = "1";
const sc_lv<3> convolution5::ap_const_lv3_5 = "101";
const sc_lv<3> convolution5::ap_const_lv3_1 = "1";
const sc_lv<2> convolution5::ap_const_lv2_0 = "00";
const sc_lv<5> convolution5::ap_const_lv5_10 = "10000";
const sc_lv<5> convolution5::ap_const_lv5_1 = "1";
const bool convolution5::ap_const_boolean_1 = true;

convolution5::convolution5(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lenet_wrapper_fadbkb_x_U39 = new lenet_wrapper_fadbkb<1,5,32,32,32>("lenet_wrapper_fadbkb_x_U39");
    lenet_wrapper_fadbkb_x_U39->clk(ap_clk);
    lenet_wrapper_fadbkb_x_U39->reset(ap_rst);
    lenet_wrapper_fadbkb_x_U39->din0(grp_fu_179_p0);
    lenet_wrapper_fadbkb_x_U39->din1(grp_fu_179_p1);
    lenet_wrapper_fadbkb_x_U39->ce(ap_var_for_const0);
    lenet_wrapper_fadbkb_x_U39->dout(grp_fu_179_p2);
    lenet_wrapper_fmucud_x_U40 = new lenet_wrapper_fmucud<1,4,32,32,32>("lenet_wrapper_fmucud_x_U40");
    lenet_wrapper_fmucud_x_U40->clk(ap_clk);
    lenet_wrapper_fmucud_x_U40->reset(ap_rst);
    lenet_wrapper_fmucud_x_U40->din0(conv5_w_load_reg_479);
    lenet_wrapper_fmucud_x_U40->din1(p4_o_2_load_reg_484);
    lenet_wrapper_fmucud_x_U40->ce(ap_var_for_const0);
    lenet_wrapper_fmucud_x_U40->dout(grp_fu_185_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_205_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_205_p2 );

    SC_METHOD(thread_ci_1_fu_362_p2);
    sensitive << ( ci_reg_156 );

    SC_METHOD(thread_ci_cast1_cast1_fu_257_p1);
    sensitive << ( ci_reg_156 );

    SC_METHOD(thread_ci_cast1_cast_fu_261_p1);
    sensitive << ( ci_reg_156 );

    SC_METHOD(thread_co_1_fu_211_p2);
    sensitive << ( co_reg_99 );

    SC_METHOD(thread_co_cast4_fu_189_p1);
    sensitive << ( co_reg_99 );

    SC_METHOD(thread_conv5_b_address0);
    sensitive << ( co_cast4_reg_390 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_conv5_b_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_conv5_w_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_157_cast_fu_385_p1 );

    SC_METHOD(thread_conv5_w_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_exitcond1_fu_245_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_reg_133 );

    SC_METHOD(thread_exitcond2_fu_225_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_110 );

    SC_METHOD(thread_exitcond3_fu_205_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( co_reg_99 );

    SC_METHOD(thread_exitcond_fu_356_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ci_reg_156 );

    SC_METHOD(thread_grp_fu_179_p0);
    sensitive << ( sum_reg_121 );
    sensitive << ( sum_2_reg_167 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_179_p1);
    sensitive << ( tmp_s_reg_489 );
    sensitive << ( conv5_b_load_reg_499 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_i_cast3_cast_fu_221_p1);
    sensitive << ( i_reg_110 );

    SC_METHOD(thread_i_cast3_fu_217_p1);
    sensitive << ( i_reg_110 );

    SC_METHOD(thread_j_cast2_cast1_fu_237_p1);
    sensitive << ( j_reg_133 );

    SC_METHOD(thread_j_cast2_cast_fu_241_p1);
    sensitive << ( j_reg_133 );

    SC_METHOD(thread_m_fu_231_p2);
    sensitive << ( i_reg_110 );

    SC_METHOD(thread_n_fu_251_p2);
    sensitive << ( j_reg_133 );

    SC_METHOD(thread_output_0_0_address0);
    sensitive << ( co_cast4_reg_390 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_0_0_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_0_0_d0);
    sensitive << ( tmp_reg_504 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_0_0_we0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_p4_o_2_address0);
    sensitive << ( p4_o_2_addr_reg_460 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_p4_o_2_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_p_shl1_cast_fu_313_p1);
    sensitive << ( tmp_150_fu_305_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_368_p3);
    sensitive << ( tmp_147_reg_455 );

    SC_METHOD(thread_p_shl3_fu_282_p1);
    sensitive << ( tmp_141_fu_274_p3 );

    SC_METHOD(thread_p_shl_cast_fu_332_p3);
    sensitive << ( tmp_152_fu_323_p2 );

    SC_METHOD(thread_tmp_141_fu_274_p3);
    sensitive << ( tmp_143_fu_265_p2 );

    SC_METHOD(thread_tmp_142_fu_193_p3);
    sensitive << ( co_reg_99 );

    SC_METHOD(thread_tmp_143_fu_265_p2);
    sensitive << ( tmp_150_cast_reg_396 );
    sensitive << ( ci_cast1_cast_fu_261_p1 );

    SC_METHOD(thread_tmp_144_fu_286_p2);
    sensitive << ( p_shl3_fu_282_p1 );
    sensitive << ( tmp_151_cast_fu_270_p1 );

    SC_METHOD(thread_tmp_145_fu_292_p2);
    sensitive << ( i_cast3_reg_409 );
    sensitive << ( tmp_144_fu_286_p2 );

    SC_METHOD(thread_tmp_146_fu_297_p1);
    sensitive << ( tmp_145_fu_292_p2 );

    SC_METHOD(thread_tmp_147_fu_301_p1);
    sensitive << ( tmp_145_fu_292_p2 );

    SC_METHOD(thread_tmp_148_fu_375_p2);
    sensitive << ( tmp_146_reg_450 );
    sensitive << ( p_shl2_cast_fu_368_p3 );

    SC_METHOD(thread_tmp_149_fu_380_p2);
    sensitive << ( j_cast2_cast_reg_437 );
    sensitive << ( tmp_148_fu_375_p2 );

    SC_METHOD(thread_tmp_150_cast_fu_201_p1);
    sensitive << ( tmp_142_fu_193_p3 );

    SC_METHOD(thread_tmp_150_fu_305_p3);
    sensitive << ( ci_reg_156 );

    SC_METHOD(thread_tmp_151_cast_fu_270_p1);
    sensitive << ( tmp_143_fu_265_p2 );

    SC_METHOD(thread_tmp_151_fu_317_p2);
    sensitive << ( p_shl1_cast_fu_313_p1 );
    sensitive << ( ci_cast1_cast1_fu_257_p1 );

    SC_METHOD(thread_tmp_152_fu_323_p2);
    sensitive << ( i_cast3_cast_reg_414 );
    sensitive << ( tmp_151_fu_317_p2 );

    SC_METHOD(thread_tmp_153_fu_340_p2);
    sensitive << ( p_shl_cast_fu_332_p3 );
    sensitive << ( tmp_160_cast_fu_328_p1 );

    SC_METHOD(thread_tmp_154_fu_346_p2);
    sensitive << ( j_cast2_cast1_reg_432 );
    sensitive << ( tmp_153_fu_340_p2 );

    SC_METHOD(thread_tmp_157_cast_fu_385_p1);
    sensitive << ( tmp_149_fu_380_p2 );

    SC_METHOD(thread_tmp_160_cast_fu_328_p1);
    sensitive << ( tmp_152_fu_323_p2 );

    SC_METHOD(thread_tmp_163_cast_fu_351_p1);
    sensitive << ( tmp_154_fu_346_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_225_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_reg_465 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond1_fu_245_p2 );
    sensitive << ( exitcond3_fu_205_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "convolution5_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, conv5_w_address0, "(port)conv5_w_address0");
    sc_trace(mVcdFile, conv5_w_ce0, "(port)conv5_w_ce0");
    sc_trace(mVcdFile, conv5_w_q0, "(port)conv5_w_q0");
    sc_trace(mVcdFile, conv5_b_address0, "(port)conv5_b_address0");
    sc_trace(mVcdFile, conv5_b_ce0, "(port)conv5_b_ce0");
    sc_trace(mVcdFile, conv5_b_q0, "(port)conv5_b_q0");
    sc_trace(mVcdFile, output_0_0_address0, "(port)output_0_0_address0");
    sc_trace(mVcdFile, output_0_0_ce0, "(port)output_0_0_ce0");
    sc_trace(mVcdFile, output_0_0_we0, "(port)output_0_0_we0");
    sc_trace(mVcdFile, output_0_0_d0, "(port)output_0_0_d0");
    sc_trace(mVcdFile, p4_o_2_address0, "(port)p4_o_2_address0");
    sc_trace(mVcdFile, p4_o_2_ce0, "(port)p4_o_2_ce0");
    sc_trace(mVcdFile, p4_o_2_q0, "(port)p4_o_2_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, co_cast4_fu_189_p1, "co_cast4_fu_189_p1");
    sc_trace(mVcdFile, co_cast4_reg_390, "co_cast4_reg_390");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_150_cast_fu_201_p1, "tmp_150_cast_fu_201_p1");
    sc_trace(mVcdFile, tmp_150_cast_reg_396, "tmp_150_cast_reg_396");
    sc_trace(mVcdFile, co_1_fu_211_p2, "co_1_fu_211_p2");
    sc_trace(mVcdFile, co_1_reg_404, "co_1_reg_404");
    sc_trace(mVcdFile, i_cast3_fu_217_p1, "i_cast3_fu_217_p1");
    sc_trace(mVcdFile, i_cast3_reg_409, "i_cast3_reg_409");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_cast3_cast_fu_221_p1, "i_cast3_cast_fu_221_p1");
    sc_trace(mVcdFile, i_cast3_cast_reg_414, "i_cast3_cast_reg_414");
    sc_trace(mVcdFile, m_fu_231_p2, "m_fu_231_p2");
    sc_trace(mVcdFile, m_reg_422, "m_reg_422");
    sc_trace(mVcdFile, exitcond2_fu_225_p2, "exitcond2_fu_225_p2");
    sc_trace(mVcdFile, j_cast2_cast1_fu_237_p1, "j_cast2_cast1_fu_237_p1");
    sc_trace(mVcdFile, j_cast2_cast1_reg_432, "j_cast2_cast1_reg_432");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_cast2_cast_fu_241_p1, "j_cast2_cast_fu_241_p1");
    sc_trace(mVcdFile, j_cast2_cast_reg_437, "j_cast2_cast_reg_437");
    sc_trace(mVcdFile, n_fu_251_p2, "n_fu_251_p2");
    sc_trace(mVcdFile, n_reg_445, "n_reg_445");
    sc_trace(mVcdFile, tmp_146_fu_297_p1, "tmp_146_fu_297_p1");
    sc_trace(mVcdFile, tmp_146_reg_450, "tmp_146_reg_450");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_147_fu_301_p1, "tmp_147_fu_301_p1");
    sc_trace(mVcdFile, tmp_147_reg_455, "tmp_147_reg_455");
    sc_trace(mVcdFile, p4_o_2_addr_reg_460, "p4_o_2_addr_reg_460");
    sc_trace(mVcdFile, exitcond_fu_356_p2, "exitcond_fu_356_p2");
    sc_trace(mVcdFile, exitcond_reg_465, "exitcond_reg_465");
    sc_trace(mVcdFile, ci_1_fu_362_p2, "ci_1_fu_362_p2");
    sc_trace(mVcdFile, ci_1_reg_469, "ci_1_reg_469");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, conv5_w_load_reg_479, "conv5_w_load_reg_479");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, p4_o_2_load_reg_484, "p4_o_2_load_reg_484");
    sc_trace(mVcdFile, grp_fu_185_p2, "grp_fu_185_p2");
    sc_trace(mVcdFile, tmp_s_reg_489, "tmp_s_reg_489");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_179_p2, "grp_fu_179_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, conv5_b_load_reg_499, "conv5_b_load_reg_499");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_reg_504, "tmp_reg_504");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, co_reg_99, "co_reg_99");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, i_reg_110, "i_reg_110");
    sc_trace(mVcdFile, exitcond1_fu_245_p2, "exitcond1_fu_245_p2");
    sc_trace(mVcdFile, exitcond3_fu_205_p2, "exitcond3_fu_205_p2");
    sc_trace(mVcdFile, sum_reg_121, "sum_reg_121");
    sc_trace(mVcdFile, j_reg_133, "j_reg_133");
    sc_trace(mVcdFile, sum_1_reg_144, "sum_1_reg_144");
    sc_trace(mVcdFile, ci_reg_156, "ci_reg_156");
    sc_trace(mVcdFile, sum_2_reg_167, "sum_2_reg_167");
    sc_trace(mVcdFile, tmp_163_cast_fu_351_p1, "tmp_163_cast_fu_351_p1");
    sc_trace(mVcdFile, tmp_157_cast_fu_385_p1, "tmp_157_cast_fu_385_p1");
    sc_trace(mVcdFile, grp_fu_179_p0, "grp_fu_179_p0");
    sc_trace(mVcdFile, grp_fu_179_p1, "grp_fu_179_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_142_fu_193_p3, "tmp_142_fu_193_p3");
    sc_trace(mVcdFile, ci_cast1_cast_fu_261_p1, "ci_cast1_cast_fu_261_p1");
    sc_trace(mVcdFile, tmp_143_fu_265_p2, "tmp_143_fu_265_p2");
    sc_trace(mVcdFile, tmp_141_fu_274_p3, "tmp_141_fu_274_p3");
    sc_trace(mVcdFile, p_shl3_fu_282_p1, "p_shl3_fu_282_p1");
    sc_trace(mVcdFile, tmp_151_cast_fu_270_p1, "tmp_151_cast_fu_270_p1");
    sc_trace(mVcdFile, tmp_144_fu_286_p2, "tmp_144_fu_286_p2");
    sc_trace(mVcdFile, tmp_145_fu_292_p2, "tmp_145_fu_292_p2");
    sc_trace(mVcdFile, tmp_150_fu_305_p3, "tmp_150_fu_305_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_313_p1, "p_shl1_cast_fu_313_p1");
    sc_trace(mVcdFile, ci_cast1_cast1_fu_257_p1, "ci_cast1_cast1_fu_257_p1");
    sc_trace(mVcdFile, tmp_151_fu_317_p2, "tmp_151_fu_317_p2");
    sc_trace(mVcdFile, tmp_152_fu_323_p2, "tmp_152_fu_323_p2");
    sc_trace(mVcdFile, p_shl_cast_fu_332_p3, "p_shl_cast_fu_332_p3");
    sc_trace(mVcdFile, tmp_160_cast_fu_328_p1, "tmp_160_cast_fu_328_p1");
    sc_trace(mVcdFile, tmp_153_fu_340_p2, "tmp_153_fu_340_p2");
    sc_trace(mVcdFile, tmp_154_fu_346_p2, "tmp_154_fu_346_p2");
    sc_trace(mVcdFile, p_shl2_cast_fu_368_p3, "p_shl2_cast_fu_368_p3");
    sc_trace(mVcdFile, tmp_148_fu_375_p2, "tmp_148_fu_375_p2");
    sc_trace(mVcdFile, tmp_149_fu_380_p2, "tmp_149_fu_380_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

convolution5::~convolution5() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lenet_wrapper_fadbkb_x_U39;
    delete lenet_wrapper_fmucud_x_U40;
}

void convolution5::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void convolution5::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_245_p2.read(), ap_const_lv1_0))) {
        ci_reg_156 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ci_reg_156 = ci_1_reg_469.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        co_reg_99 = co_1_reg_404.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        co_reg_99 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_205_p2.read(), ap_const_lv1_0))) {
        i_reg_110 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_245_p2.read()))) {
        i_reg_110 = m_reg_422.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_225_p2.read(), ap_const_lv1_0))) {
        j_reg_133 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_465.read()))) {
        j_reg_133 = n_reg_445.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_225_p2.read(), ap_const_lv1_0))) {
        sum_1_reg_144 = sum_reg_121.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_465.read()))) {
        sum_1_reg_144 = sum_2_reg_167.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_245_p2.read(), ap_const_lv1_0))) {
        sum_2_reg_167 = sum_1_reg_144.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        sum_2_reg_167 = grp_fu_179_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_205_p2.read(), ap_const_lv1_0))) {
        sum_reg_121 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_245_p2.read()))) {
        sum_reg_121 = sum_1_reg_144.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ci_1_reg_469 = ci_1_fu_362_p2.read();
        exitcond_reg_465 = exitcond_fu_356_p2.read();
        p4_o_2_addr_reg_460 =  (sc_lv<9>) (tmp_163_cast_fu_351_p1.read());
        tmp_146_reg_450 = tmp_146_fu_297_p1.read();
        tmp_147_reg_455 = tmp_147_fu_301_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        co_1_reg_404 = co_1_fu_211_p2.read();
        co_cast4_reg_390 = co_cast4_fu_189_p1.read();
        tmp_150_cast_reg_396 = tmp_150_cast_fu_201_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        conv5_b_load_reg_499 = conv5_b_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        conv5_w_load_reg_479 = conv5_w_q0.read();
        p4_o_2_load_reg_484 = p4_o_2_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_cast3_cast_reg_414 = i_cast3_cast_fu_221_p1.read();
        i_cast3_reg_409 = i_cast3_fu_217_p1.read();
        m_reg_422 = m_fu_231_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_cast2_cast1_reg_432 = j_cast2_cast1_fu_237_p1.read();
        j_cast2_cast_reg_437 = j_cast2_cast_fu_241_p1.read();
        n_reg_445 = n_fu_251_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_reg_504 = grp_fu_179_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_s_reg_489 = grp_fu_185_p2.read();
    }
}

void convolution5::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void convolution5::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void convolution5::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void convolution5::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void convolution5::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void convolution5::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void convolution5::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void convolution5::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void convolution5::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void convolution5::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void convolution5::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void convolution5::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void convolution5::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void convolution5::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void convolution5::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void convolution5::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_205_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void convolution5::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void convolution5::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_205_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void convolution5::thread_ci_1_fu_362_p2() {
    ci_1_fu_362_p2 = (!ap_const_lv5_1.is_01() || !ci_reg_156.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(ci_reg_156.read()));
}

void convolution5::thread_ci_cast1_cast1_fu_257_p1() {
    ci_cast1_cast1_fu_257_p1 = esl_zext<8,5>(ci_reg_156.read());
}

void convolution5::thread_ci_cast1_cast_fu_261_p1() {
    ci_cast1_cast_fu_261_p1 = esl_zext<12,5>(ci_reg_156.read());
}

void convolution5::thread_co_1_fu_211_p2() {
    co_1_fu_211_p2 = (!co_reg_99.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(co_reg_99.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void convolution5::thread_co_cast4_fu_189_p1() {
    co_cast4_fu_189_p1 = esl_zext<32,7>(co_reg_99.read());
}

void convolution5::thread_conv5_b_address0() {
    conv5_b_address0 =  (sc_lv<7>) (co_cast4_reg_390.read());
}

void convolution5::thread_conv5_b_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        conv5_b_ce0 = ap_const_logic_1;
    } else {
        conv5_b_ce0 = ap_const_logic_0;
    }
}

void convolution5::thread_conv5_w_address0() {
    conv5_w_address0 =  (sc_lv<16>) (tmp_157_cast_fu_385_p1.read());
}

void convolution5::thread_conv5_w_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        conv5_w_ce0 = ap_const_logic_1;
    } else {
        conv5_w_ce0 = ap_const_logic_0;
    }
}

void convolution5::thread_exitcond1_fu_245_p2() {
    exitcond1_fu_245_p2 = (!j_reg_133.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_133.read() == ap_const_lv3_5);
}

void convolution5::thread_exitcond2_fu_225_p2() {
    exitcond2_fu_225_p2 = (!i_reg_110.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_110.read() == ap_const_lv3_5);
}

void convolution5::thread_exitcond3_fu_205_p2() {
    exitcond3_fu_205_p2 = (!co_reg_99.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(co_reg_99.read() == ap_const_lv7_78);
}

void convolution5::thread_exitcond_fu_356_p2() {
    exitcond_fu_356_p2 = (!ci_reg_156.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(ci_reg_156.read() == ap_const_lv5_10);
}

void convolution5::thread_grp_fu_179_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_179_p0 = sum_reg_121.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_179_p0 = sum_2_reg_167.read();
    } else {
        grp_fu_179_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void convolution5::thread_grp_fu_179_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_179_p1 = conv5_b_load_reg_499.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_179_p1 = tmp_s_reg_489.read();
    } else {
        grp_fu_179_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void convolution5::thread_i_cast3_cast_fu_221_p1() {
    i_cast3_cast_fu_221_p1 = esl_zext<8,3>(i_reg_110.read());
}

void convolution5::thread_i_cast3_fu_217_p1() {
    i_cast3_fu_217_p1 = esl_zext<32,3>(i_reg_110.read());
}

void convolution5::thread_j_cast2_cast1_fu_237_p1() {
    j_cast2_cast1_fu_237_p1 = esl_zext<10,3>(j_reg_133.read());
}

void convolution5::thread_j_cast2_cast_fu_241_p1() {
    j_cast2_cast_fu_241_p1 = esl_zext<17,3>(j_reg_133.read());
}

void convolution5::thread_m_fu_231_p2() {
    m_fu_231_p2 = (!i_reg_110.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_110.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void convolution5::thread_n_fu_251_p2() {
    n_fu_251_p2 = (!j_reg_133.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_reg_133.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void convolution5::thread_output_0_0_address0() {
    output_0_0_address0 =  (sc_lv<7>) (co_cast4_reg_390.read());
}

void convolution5::thread_output_0_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_0_0_ce0 = ap_const_logic_1;
    } else {
        output_0_0_ce0 = ap_const_logic_0;
    }
}

void convolution5::thread_output_0_0_d0() {
    output_0_0_d0 = tmp_reg_504.read();
}

void convolution5::thread_output_0_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_0_0_we0 = ap_const_logic_1;
    } else {
        output_0_0_we0 = ap_const_logic_0;
    }
}

void convolution5::thread_p4_o_2_address0() {
    p4_o_2_address0 = p4_o_2_addr_reg_460.read();
}

void convolution5::thread_p4_o_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        p4_o_2_ce0 = ap_const_logic_1;
    } else {
        p4_o_2_ce0 = ap_const_logic_0;
    }
}

void convolution5::thread_p_shl1_cast_fu_313_p1() {
    p_shl1_cast_fu_313_p1 = esl_zext<8,7>(tmp_150_fu_305_p3.read());
}

void convolution5::thread_p_shl2_cast_fu_368_p3() {
    p_shl2_cast_fu_368_p3 = esl_concat<15,2>(tmp_147_reg_455.read(), ap_const_lv2_0);
}

void convolution5::thread_p_shl3_fu_282_p1() {
    p_shl3_fu_282_p1 = esl_zext<32,14>(tmp_141_fu_274_p3.read());
}

void convolution5::thread_p_shl_cast_fu_332_p3() {
    p_shl_cast_fu_332_p3 = esl_concat<8,2>(tmp_152_fu_323_p2.read(), ap_const_lv2_0);
}

void convolution5::thread_tmp_141_fu_274_p3() {
    tmp_141_fu_274_p3 = esl_concat<12,2>(tmp_143_fu_265_p2.read(), ap_const_lv2_0);
}

void convolution5::thread_tmp_142_fu_193_p3() {
    tmp_142_fu_193_p3 = esl_concat<7,4>(co_reg_99.read(), ap_const_lv4_0);
}

void convolution5::thread_tmp_143_fu_265_p2() {
    tmp_143_fu_265_p2 = (!ci_cast1_cast_fu_261_p1.read().is_01() || !tmp_150_cast_reg_396.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ci_cast1_cast_fu_261_p1.read()) + sc_biguint<12>(tmp_150_cast_reg_396.read()));
}

void convolution5::thread_tmp_144_fu_286_p2() {
    tmp_144_fu_286_p2 = (!p_shl3_fu_282_p1.read().is_01() || !tmp_151_cast_fu_270_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_shl3_fu_282_p1.read()) + sc_biguint<32>(tmp_151_cast_fu_270_p1.read()));
}

void convolution5::thread_tmp_145_fu_292_p2() {
    tmp_145_fu_292_p2 = (!i_cast3_reg_409.read().is_01() || !tmp_144_fu_286_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_cast3_reg_409.read()) + sc_biguint<32>(tmp_144_fu_286_p2.read()));
}

void convolution5::thread_tmp_146_fu_297_p1() {
    tmp_146_fu_297_p1 = tmp_145_fu_292_p2.read().range(17-1, 0);
}

void convolution5::thread_tmp_147_fu_301_p1() {
    tmp_147_fu_301_p1 = tmp_145_fu_292_p2.read().range(15-1, 0);
}

void convolution5::thread_tmp_148_fu_375_p2() {
    tmp_148_fu_375_p2 = (!p_shl2_cast_fu_368_p3.read().is_01() || !tmp_146_reg_450.read().is_01())? sc_lv<17>(): (sc_biguint<17>(p_shl2_cast_fu_368_p3.read()) + sc_biguint<17>(tmp_146_reg_450.read()));
}

void convolution5::thread_tmp_149_fu_380_p2() {
    tmp_149_fu_380_p2 = (!j_cast2_cast_reg_437.read().is_01() || !tmp_148_fu_375_p2.read().is_01())? sc_lv<17>(): (sc_biguint<17>(j_cast2_cast_reg_437.read()) + sc_biguint<17>(tmp_148_fu_375_p2.read()));
}

void convolution5::thread_tmp_150_cast_fu_201_p1() {
    tmp_150_cast_fu_201_p1 = esl_zext<12,11>(tmp_142_fu_193_p3.read());
}

void convolution5::thread_tmp_150_fu_305_p3() {
    tmp_150_fu_305_p3 = esl_concat<5,2>(ci_reg_156.read(), ap_const_lv2_0);
}

void convolution5::thread_tmp_151_cast_fu_270_p1() {
    tmp_151_cast_fu_270_p1 = esl_zext<32,12>(tmp_143_fu_265_p2.read());
}

void convolution5::thread_tmp_151_fu_317_p2() {
    tmp_151_fu_317_p2 = (!p_shl1_cast_fu_313_p1.read().is_01() || !ci_cast1_cast1_fu_257_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl1_cast_fu_313_p1.read()) + sc_biguint<8>(ci_cast1_cast1_fu_257_p1.read()));
}

void convolution5::thread_tmp_152_fu_323_p2() {
    tmp_152_fu_323_p2 = (!i_cast3_cast_reg_414.read().is_01() || !tmp_151_fu_317_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(i_cast3_cast_reg_414.read()) + sc_biguint<8>(tmp_151_fu_317_p2.read()));
}

void convolution5::thread_tmp_153_fu_340_p2() {
    tmp_153_fu_340_p2 = (!p_shl_cast_fu_332_p3.read().is_01() || !tmp_160_cast_fu_328_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl_cast_fu_332_p3.read()) + sc_biguint<10>(tmp_160_cast_fu_328_p1.read()));
}

void convolution5::thread_tmp_154_fu_346_p2() {
    tmp_154_fu_346_p2 = (!j_cast2_cast1_reg_432.read().is_01() || !tmp_153_fu_340_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(j_cast2_cast1_reg_432.read()) + sc_biguint<10>(tmp_153_fu_340_p2.read()));
}

void convolution5::thread_tmp_157_cast_fu_385_p1() {
    tmp_157_cast_fu_385_p1 = esl_zext<32,17>(tmp_149_fu_380_p2.read());
}

void convolution5::thread_tmp_160_cast_fu_328_p1() {
    tmp_160_cast_fu_328_p1 = esl_zext<10,8>(tmp_152_fu_323_p2.read());
}

void convolution5::thread_tmp_163_cast_fu_351_p1() {
    tmp_163_cast_fu_351_p1 = esl_zext<32,10>(tmp_154_fu_346_p2.read());
}

void convolution5::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_205_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_225_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_245_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_465.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

